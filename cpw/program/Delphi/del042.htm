<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>您现在的位置是</title>
</head>

<body>

<div align="center"><center>

<table border="1" cellspacing="0" cellpadding="2" width="100%" style="font-size: 9pt"
bordercolor="#000000" bordercolordark="#FFFFFF">
  <tr bgcolor="#CCFFCC">
    <td><span style="font-size: 9pt">您现在的位置是： <b><a href="../progidx.htm">编程技巧</a> --&gt; 
      <a href="Del_idx.htm">DELPHI</a></b></span></td>      
  </tr>      
</table>      
</center></div><div align="center"><center>      
      
<table border="1" width="100%" style="font-size: 9pt" bgcolor="#FFFFFF"      
bordercolor="#000000" cellpadding="2" cellspacing="0" bordercolordark="#FFFFFF">      
  <tr>      
    <td width="85%" align="left" valign="top"><table border="1" width="32%" style="font-size: 9pt" height="30"      
    cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" bordercolor="#000000"      
    bordercolordark="#FFFFFF">      
      <tr>      
        <td width="100%" bgcolor="#4264B5"><p align="center"><span style="font-size: 9pt"><font      
        color="#FFFFFF">资料整理&middot;<a href="http://chinaprog.yeah.net" target="_blank"      
        style="color: rgb(255,255,255)">中国程序员网站</a></font></span></td>      
      </tr>      
    </table>      
      <p align="center">Delphi使用技巧四则      
      <p>　　一、定制Speedbar<br>
      　　在Delphi的可视化设计界面中，使用最频繁的地方要数位于屏幕左上角的加速按钮栏（Speedbar）了。在实践过程中，笔者无意中发现了Speedbar的定制方法，这在我用过的四本Delphi参考书中均未提及到。步骤如下：<br>
      <br>
      　　右键点击Speedbar，在弹出菜单中选Properties，这时会出现一个名为SpeedbarEditor的对话框。假设想要增设一项“语法检查”的功能，可在左边Categories列表框中选Project，再把右侧的Syntax Check图标拖放到Speedbar的合适的位置上，这项功能就已经加上了。如果speedbar上没有多余的空间来容纳新的按钮，可将鼠标停在speedbar右框处，变为双向箭头的形状时，向右拖动一段距离，就可腾出空间。如想删除speedbar上的某个按钮，可简单地把它拖出speedbar的范围，就能删除。操作十分方便。建议把Syntax Check、Project Options（工程选项）、WindowsApi Help加到Speedbar中，可以提高开发效率。<br> 
      <br> 
      　　二、设计Form时的快捷键<br>
      　　使用快捷键可以加快设计速度。下面列出的快捷键，可根据实际情况，有选择地熟练掌握。<br>
      　　Del :删除所选组件；<br> 
      　　Esc :选择当前组件的容器（通常是Panel,Group或Form）；<br> 
      　　F11 :在Form或Unit和对象检查器之间切换；<br> 
      　　F12 :在Form和代码编辑器间切换；<br> 
      　　Ctrl＋F12 :显示“查看Unit”对话框；<br> 
      　　Shift＋F12 :显示“查看Form”对话框；<br> 
      　　TAB :下一个组件;<br> 
      　　Shift＋TAB :上一个组件;<br> 
      　　方向键 :选中此方向上最近的组件;<br> 
      　　Ctrl＋方向键 :将所选组件移动一个点;<br> 
      　　Shift＋方向键 :将所选组件改变一个点的大小;<br> 
      　　Ctrl＋Shift＋方向键 :将所选组件移动一个格;<br> 
      　　Shift＋click :按住Shift键再用鼠标点击组件，可以选择多个组件。<br> 
      　　下面这条是我摸索出来的：<br>
      　　Ctrl＋drag :按住Ctrl键在一个容器组件（如Panel,QReport,Groupbox等）里拖动鼠标，可强制选择鼠标拖过的矩形框中的所有属于此容器的可视组件（不包括该容器组件）。<br> 
      <br> 
      　　三、命令行参数的使用<br>
      　　Delphi提供了访问命令行参数的方便的方式，那就是使用ParamStr和ParamCount函数。其中ParamStr(0)返回的是当前程序名，如C:TESTMYPROG.EXE，ParamStr(1)返回第一个参数，以此类推；ParamCount则是参数个数。示例如下:<br>
      　　var&nbsp;<br>
      　　I: Word;<br> 
      　　Y: Integer;<br> 
      　　begin<br>
      　　 Y := 10;<br> 
      　　 for I := 1 to ParamCount do begin<br> 
      　　 Canvas.TextOut(5, Y, ParamStr(I));<br> 
      　　 Y := Y ＋ Canvas.TextHeight(ParamStr(I)) ＋ 5;<br> 
      　　 end;<br> 
      　　end;<br>
      <br>
      　　四、DCU文件（编译的库单元）的重用<br>
      　(1)在interface里的uses子句中引用。如Windows,Dialogs等，要求被引用的DCU一定要放在Delphi 3Lib子目录中。<br> 
      　　(2)在implementation里的uses子句中引用。如果是自行编写的DCU文件，应采用这一方式，并将被引用的DCU文件放入当前工程所在的子目录中。     
    </td>     
  </tr>     
</table>     
</center></div>     

</body>

</html>
