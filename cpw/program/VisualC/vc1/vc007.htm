<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://person.zj.cninfo.net/~yao/document/bcb/bcb004.htm -->
<HTML><HEAD><TITLE>怎样在C＋＋Builder中创建使用DLL</TITLE>
<META content="text/html; charset=gb2312" http-equiv=Content-Type>
<STYLE>P {
	FONT-FAMILY: 宋体; FONT-SIZE: 10.5pt
}
</STYLE>

<META content="Microsoft FrontPage 4.0" name=GENERATOR></HEAD>
<BODY>
<div align="center"><center>

<table border="1" cellspacing="0" cellpadding="2" width="100%" style="font-size: 9pt"
bordercolor="#000000" bordercolordark="#FFFFFF" height="12">
  <tr bgcolor="#CCFFCC">
    <td height="6"><span style="font-size: 9pt">您现在的位置是： <b><a href="../../progidx.htm">编程技巧</a> --&gt; 
      <a href="../Vcidx098.htm">Visual C++</a></b></span></td>   
  </tr>   
</table>   
</center></div><div align="center"><center>   
   
<table border="1" width="100%" style="font-size: 9pt" bgcolor="#FFFFFF"   
bordercolor="#000000" cellpadding="2" cellspacing="0" bordercolordark="#FFFFFF">   
  <tr>   
    <td width="85%" align="left" valign="top"><table border="1" width="32%" style="font-size: 9pt" height="30"   
    cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" bordercolor="#000000"   
    bordercolordark="#FFFFFF">   
      <tr>   
        <td width="100%" bgcolor="#4264B5"><p align="center"><span style="font-size: 9pt"><font   
        color="#FFFFFF">资料整理&middot;<a href="http://chinaprog.yeah.net" target="_blank"   
        style="color: rgb(255,255,255)">中国程序员网站</a></font></span></td>   
      </tr>   
    </table>   
      <B>
      <P 
      align=center></B><STRONG>怎样在C＋＋Builder中创建使用DLL<BR><BR>(上海　施江杰)</STRONG></P>
      <P>　　自从C＋＋Builder从去年浪漫情人节上市以来，吸引了大量的Delphi、VC、Vb的程序员到它的怀抱,大量的C、C＋＋程序员感叹道：总算有了C的可视化开发工具，对我也是一样，从BC、Delphi到C＋＋Builder。<BR>　　动态链接库(DLL)是Windows编程常遇到的编程方法，下面我就介绍一下在BCB  
      (C＋＋Builder下简称BCB) 中如何创建使用DLL和一些技巧。<BR>　　一、创建:<BR>　　使用BCB  
      File|NEW建立一个新的DLL工程，并保存好文件BCB，生成一个DLL的程序框架。<BR>　　1．DllEntryPoint函数为一个入口方法，如果使用者在DLL被系统初始化或者注销时被调用，用来写入对DLL的初始化程序和卸载程序；参数：hinst用来指示DLL的基地址；reason用来指示DLL的调用方式，用于区别多线程单线程对DLL的调用、创建、卸载DLL；<BR>　　2．在程序中加入自己所要创建的DLL过程、函数；<BR>　　3．用dllimport描述出口；<BR>　　例程序如下：<BR>　　＃include<VCL.H> 
      <BR>　　＃pragma hdrstop<BR>　　extern “C” __declspec(dllexport) int  
      test();<BR>　　int WINAPI DllEntryPoint(HINSTANCE hinst, unsigned long  
      reason, void＊)<BR>　　{<BR>　　 return 1;<BR>　　}<BR>　　int test()<BR>　　{<BR>　　  
      return 3;<BR>　　}<BR>　　注意：动态链接库中调用过程、函数时有不同的CALL方式 __cdecl、 __pascal,  
      __fastcall、__stdcall，BCB中默认的方式为__cdecl(可不写)，如果考虑兼容性可用时__stdcall声明方法为：<BR>　　extern  
      “C” __declspec(dllexport) int __stdcall  
      test();<BR>　　对于其中过程、函数也改为：<BR>　　int __stdcall  
      test()<BR>　　二、使用DLL<BR>　　在BCB中使用DLL有两种方法：<BR>　　1．用静态调用法<BR>　　首先需要在BCB的项目中加入输入接口库(import  
      library)，打开工程项目，使用BCB View|Project  
      Manager打开项目列表，向项目中加入接口库(＊.lib)。<BR>　　其次在头文件中加入接口声明。<BR>　　例程序如下：<BR>　　  
      //define in include file<BR>　　extern “C” __declspec(dllimport) int __cdecl  
      test();<BR>　　//use function in main program<BR>　　int  
      I；<BR>　　I=test();<BR>　　注意：<BR>　　(1)动态链接库调用过程、函数时CALL方式  
      与创建时方式一样不写为__cdecl，其它需要声明。<BR>　　(2)BCB创建的DLL有对应的输入接口库(import  
      library)，如只有DLL而无库时，可用BCB的implib工具产生：implib xxx.lib xxx.dll；另外可用：tlib  
      xxx.lib,xxx.lst  
      产生DLL的内部函数列表，许多Windows的未公开技术就是用这种方法发现的。<BR>　　2．动态调用法<BR>　　动态调用法要用Windows  
      API  
      中的LoadLibrary()和GetProcAddress()来调入DLL库，指出库中函数位置，这种方法较常见。<BR>　　例程序如下：<BR>　　  
      HINSTANCE dd;<BR>　　 int _stdcall (＊ddd)(void);<BR>　　  
      dd=LoadLibrary(“xxx.dll”);<BR>　　 ddd=GetProcAddress(dd,“test”);<BR>　　  
      Caption=IntToStr(ddd());<BR>　　FreeLibrary(dd);<BR>　　三、注意：<BR>　　创建DLL时编译链接时注意设置Project  
      Options。<BR>　　Packages标签：去除Builder with runtime  
      packages检查框。<BR>　　Linker标签：去除Use dynamic RTL检查框。<BR>　　否则创建的DLL需要Runtime  
      packages or Runtime  
library。</P>    
      <p>　    
    </td>    
  </tr>    
</table>    
</center></div>    
<p>　</p> 
</BODY></HTML> 
