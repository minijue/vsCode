<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>现在的位置是</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body>

<table border="0" cellspacing="2" cellpadding="0" width="100%" style="font-size: 9pt">
  <tr bgcolor="#CCFFCC">
    <td><span style="font-size: 9pt">现在的位置是： <b><a href="linuxidx.htm">Unix/Linux</a> 
    &gt;</b> </span>UNIX简介</td>
  </tr>
  <tr>
    <td></td>
  </tr>
</table>

<table border="0" width="100%" style="font-size: 9pt" bgcolor="#E8E8E8">
  <tr>
    <td width="100%"><table border="1" width="32%" style="font-size: 9pt" height="30"
    cellspacing="0" cellpadding="2">
      <tr>
        <td width="100%" bgcolor="#4264B5"><p align="center"><font color="#FFFFFF">资料整理<span
        class="f">&middot;</span><a href="http://fasoft.yeah.net" target="_blank"
        style="color: rgb(255,255,255)">中国程序员网站</a></font></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%">　<table border="0" width="100%" bgcolor="#E8E8E8">
      <tr>
        <td width="100%"></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%"><p align="center"><strong>UNIX简介</strong></td>
  </tr>
  <tr>
    <td width="100%"></td>
  </tr>
  <tr>
    <td width="100%">登录工作站<br>
    ==========<br>
    ..透过 PC 登录工作站<br>
    ===================<br>
    执行格式：telnet hostname (在 dos 下执行)<br>
    telnet ip-address<br>
    Example:<br>
    telnet doc telnet 140.122.77.120<br>
    <br>
    目前系上可用的工作站如下：<br>
    sun1 sun2 sun6 sun7 sun8 sun9 sun10 sun11 sun12 sun13 snow pacific atlantic<br>
    indian graph1 doc happy grumpy sneezy bashfule dopey ice<br>
    注: 可利用指令 arp hostname 或 arp domain_name 查询 ip_address<br>
    <br>
    ..登录步骤<br>
    =========<br>
    login : _______ =&gt; 输入 username<br>
    password : _______ =&gt; 输入密码<br>
    <br>
    ..登出步骤<br>
    =========<br>
    % logout<br>
    或 % exit<br>
    或 % &lt;CTRL&gt;&lt;d&gt;<br>
    <br>
    更改帐号密码<br>
    ============<br>
    % yppasswd =&gt; 执行後将会出现下列讯息<br>
    Changing NIS password for user on ice.<br>
    Old password: ______ =&gt; 输入旧密码<br>
    New password: ______ =&gt; 输入新密码(最好6-8字，英文字母与数字混合)<br>
    Retype new password: ______ =&gt; 再输入一次密码<br>
    <br>
    线上指令说明<br>
    ============<br>
    执行格式： man command-name<br>
    Example: % man ls<br>
    <br>
    进入远端电脑系统<br>
    ================<br>
    执行格式：rlogin hostname [-1 username]<br>
    Example:<br>
    %rlogin doc<br>
    remote login 进入工作站 doc 中。<br>
    %rlogin doc -l user<br>
    使用 user 帐号进入工作站 doc 中。<br>
    <br>
    执行格式：telnet hostname 或 telnet IP address<br>
    Example:<br>
    %telnet doc or %telnet 140.109.20.251<br>
    <br>
    档案或目录处理<br>
    ==================<br>
    ．列出档案或目录下之档案名称<br>
    执行格式： ls [-atFlgR] [name] ( name 可为档名或目录名称。)<br>
    <br>
    Example :<br>
    ls 列出目前目录下之档名。<br>
    ls -a 列出包含以．起始的隐藏档所有档名。<br>
    ls -t 依照档案最後修改时间之顺序，依序列出档名。<br>
    ls -F 列出目前目录下之档名及其类型。&quot;/&quot; 
    结尾表示为目录名称，<br>
    &quot;*&quot; 结尾表示为执行档，&quot;@&quot; 结尾表示为 symblic link。<br>
    ls -l 
    列出目录下所有档案之许可权、拥有者、档案大小、修改时间及名称。<br>
    ls -lg 同上，并显示出档案之拥有者群组名称。<br>
    ls -R 显示出目录下，以及其所有子目录之档名。( recursive listing )<br>
    <br>
    目录之缩写：<br>
    ===========<br>
    ～　　　　 使用者 login 时的 working directory ( 起始目录 )<br>
    ～username 指定某位 user 的 working directory ( 起始目录 )<br>
    .. 目前的工作目录 ( current working directory )<br>
    .. 目前目录的上一层目录 ( parent of working directory)<br>
    <br>
    改变工作目录位置<br>
    ================<br>
    执行格式：cd [name] ：name 可为目录名称、路径或目录缩写。<br>
    Example:<br>
    cd 改变目录位置，至使用者 login 时的 working directory (起始目录)。<br>
    cd dir1 改变目录位置，至 dir1 之目录位置下。<br>
    cd ~user 改变目录位置，至使用者的 working directory (起始目录)。<br>
    cd .. 改变目录位置，至目前目录的上层( 即 parent of working directory)<br>
    cd ../user 改变目录位置，至相对路径 user 之目录位置下。<br>
    cd /../.. 改变目录位置，至绝对路径( Full path ) 之目录位置下。<br>
    <br>
    复制档案<br>
    ========<br>
    执行格式: cp [-r] source destination<br>
    <br>
    Example:<br>
    cp file1 file2 将档案 file1 复制成 file2<br>
    cp file1 dir1 将档案 file1 复制到目录 dir1 下，档名仍为 file1。<br>
    cp /tmp/file1 . 将目录 /tmp 下的档案 file1 复制到现行目录下，档名仍为 
    file1。<br>
    cp /tmp/file1 file2 将目录 /tmp 下的档案 file1 复制到现行目录下，档名为 
    file2□<br>
    cp -r dir1 dir2 (recursive copy) 复制整个目录。<br>
    若目录 dir2 不存在，则将目录 dir1，及其所有档案和子目录，复制<br>
    到目录 dir2 下，新目录名称为 dir1。若目录 dir2 不存在，则将<br>
    dir1，及其所有档案和子目录，复制为目录 dir2。<br>
    <br>
    搬移或更改档案、目录名称<br>
    ========================<br>
    执行格式： mv source destination<br>
    Example:<br>
    mv file1 file2 将档案 file1，更改档名为 file2。<br>
    mv file1 dir1 将档案 file1，移到目录 dir1 下，档名仍为 file1。<br>
    mv dir1 dir2 若目录 dir2 不存在，则将目录 dir1，及其所有档案和子目录，移<br>
    到目录 dir2 下，新目录名称为 dir1。若目录 dir2 不存在，则将<br>
    dir1，及其所有档案和子目录，更改为目录 dir2。<br>
    <br>
    建立新目录<br>
    ==========<br>
    执行格式： mkdir directory-name<br>
    Exmaple ：<br>
    mkdir dir1 建立一新目录 dir1。<br>
    <br>
    删除目录<br>
    ========<br>
    执行格式： rmdir directory-name 或 rm directory-name<br>
    Example ：<br>
    rmdir dir1 删除目录 dir1，但 dir1 
    下必须没有档案存在，否则无法删除。<br>
    rm -r dir1 删除目录 dir1，及其下所有档案及子目录。<br>
    <br>
    删除档案<br>
    ========<br>
    执行格式： rm filename (filename 可为档名，或档名缩写符号。)<br>
    Example ：<br>
    rm file1 删除档名为 file1 之档案。<br>
    rm file? 删除档名中有五个字元，前四个字元为file 之所有档案。<br>
    rm f* 删除档名中，以 f 为字首之所有档案。<br>
    <br>
    <br>
    档名的缩写符号<br>
    ==============<br>
    ? 代表档案名称中之单一字元。<br>
    * 代表档案名称中之一字串。<br>
    <br>
    列出目前所在之目录位置<br>
    ======================<br>
    执行格式： pwd<br>
    <br>
    查看档案内容<br>
    ============<br>
    执行格式： cat filename<br>
    Example ：<br>
    cat file1 　以连续显示方式，查看档名 file1 之内容。<br>
    <br>
    执行格式： more filename 或 cat filename | more<br>
    Example ：<br>
    more file1　 以分页方式，查看档名 file1 之内容。<br>
    cat file1 | more 同上。<br>
    <br>
    查看目录所占磁碟容量<br>
    ====================<br>
    执行格式: du [-s] directory<br>
    Example :<br>
    du dir1 显示目录 dir1 的总容量及其次目录的容量(以 k byte 为容量)。<br>
    du -s dir1 显示目录 dir1 的总容量。<br>
    <br>
    查看自己的 disk quota 使用状况<br>
    ==============================<br>
    disk quota : 工作站磁碟空间的使用限额。<br>
    执行格式: quota -v<br>
    Example :<br>
    quota -v 将会显示下列讯息<br>
    Filesystem usage quota limit timeleft files quota limit timelef.<br>
    /home/ice/u01<br>
    9344 8192 12288 1.9 days 160 0 0<br>
    栏位解说:<br>
    usage : 目前的磁碟用量。<br>
    quota : 你的磁碟使用额度。当你的 usage 超过 quota 
    时，虽然可以继续使用，但是<br>
    必须七天之内降到 quota 以下，否则即使用量没有超 limit(最高限额)，也无<br>
    法再写入或复制任何档案。<br>
    limit : 最高使用额度。当你的 usage 达到 limit 
    时，无法再写入或复制任何档案。<br>
    <br>
    档案传输<br>
    ========<br>
    ．拷贝档案或目录至远端工作站<br>
    ============================<br>
    执行格式： rcp [-r] source hostnome:destination<br>
    ( source 可为档名、目录名或路径，hostnome 为工作站站名，destination 
    为路径名称.<br>
    Example ：<br>
    rcp file1 doc:/home/user<br>
    将档案 file1，拷贝到工作站 doc 路径 /home/user 之目录下。<br>
    rcp -r dir1 doc:/home/user<br>
    将目录 dir1，拷贝到工作站 doc 路径/home/user 之目录下。<br>
    <br>
    ．自远端工作站，拷贝档案或目录<br>
    ===============================<br>
    执行格式： rcp [-r] hostname:source destination<br>
    ( hostname 为工作站名，source 为路径名，destination 
    可为档名、目录名或路径 )。<br>
    Example ：<br>
    rcp doc:/home/user/file1 file2<br>
    将工作站 doc 中，位於 /home/user 目录下之目录 dir1，拷贝到目前工作站之目录下，<br>
    目录名称仍为 dir1。<br>
    rcp -r doc:/home/user/dir1 .<br>
    将工作站 iis1 中，位於 /home/user 目录下之目录 dir1，拷贝到目前工作站之目录下□<br>
    目录名称仍为 dir1。<br>
    <br>
    ．本地工作站与远端工作站之间档案传输<br>
    ====================================<br>
    ( 必须拥有远端工作站之帐号及密码，才可进行传输工作 )<br>
    执行格式： ftp hostname or ftp ip_address<br>
    Example ：<br>
    ftp doc 与远端工作站 doc ，进行档案传输<br>
    Name (doc:user-name) : 输入帐号<br>
    Password (doc:user-name): 输入密码<br>
    <br>
    ftp&gt; help 列出 ftp 档案传输，可使用之任何命令。<br>
    ftp&gt; !ls 列出本地工作站，目前目录下之所有档名。<br>
    ftp&gt; !pwd 列出本地工作站，目前所在之工作目录位置。<br>
    ftp&gt; ls 列出远端工作站目前目录下之所有档名。<br>
    ftp&gt; dir 列出远端工作站目前目录下之所有档名(略同於 UNIX 的 ls -l 
    指令).<br>
    ftp&gt; dir . |more 同上，但每页会暂停(可能不适用 Unix 以外的 ftp)。<br>
    ftp&gt; pwd 列出远端工作站目前所在之目录位置。<br>
    ftp&gt; cd dir1 更改远端工作站之工作目录位置至 dir1 之下。<br>
    ftp&gt; get file1 将远端工作站之档案 file1 ，拷贝到本地工作站中。<br>
    ftp&gt; put file2 将本地工作站之档案 file2 ，拷贝到远端工作站中。<br>
    ftp&gt; mget *.c 将远端工作站中，副档名为 c 
    之所有档案，拷贝到本地工作站中。<br>
    ftp&gt; mput *.txt 将本地工作站中，副档名为 txt 
    之所有档案，拷贝远端工作站中。<br>
    ftp&gt; prompt 切换交谈式指令(使用 mput/mget 时不用每个档案皆询问yes/no)。<br>
    ftp&gt; quit 结束 ftp 工作。<br>
    ftp&gt; bye 结束 ftp 工作。<br>
    注: 从PC与工作站间的档案传输也可透过在 PC端的 FTP指令进行档案传输，指令用法与<br>
    上所述大致相同。<br>
    <br>
    档案模式之设定<br>
    ==============<br>
    ．改变档案或目录之读、写、执行之允许权<br>
    ======================================<br>
    执行格式：chmod [-R] mode name<br>
    ( name 可为档名或目录名;mode可为 3 个 8 位元之数字，或利用ls -l 
    命令，列出<br>
    档案或目录之读、写、执行允许权之文字缩写。)<br>
    mode : rwx rwx rwx r:read w:write x:execute<br>
    user group other<br>
    缩写 : (u) (g) (o)<br>
    Example :<br>
    %chmod 755 dir1　<br>
    将目录dir1，设定成任何使用者，皆有读取及执行之权利，但只有拥有者可做修改。<br>
    %chmod 700 file1<br>
    将档案file1，设定只有拥有者可以读、写和执行。<br>
    %chmod o+x file2<br>
    将档案file2，增加拥有者可以执行之权利。<br>
    %chmod g+x file3<br>
    将档案file3，增加群组使用者可执行之权利。<br>
    %chmod o-r file4<br>
    将档案file4，除去其它使用者可读取之权利。<br>
    <br>
    ．改变档案或目录之拥有权<br>
    ========================<br>
    执行格式：chown [-R] username name ( name 可为档名或目录名。)<br>
    Example ：<br>
    %chown user file1<br>
    将档案 file1 之拥有权，改为使用者 user 所有。<br>
    %chown -R user dir1<br>
    将目录 dir1，及其下所有档案和子目录之拥有权，改为使用者 user 
    所有。<br>
    <br>
    检查自己所属之群组名称<br>
    ======================<br>
    执行格式：groups<br>
    <br>
    ．改变档案或目录之群组拥有权<br>
    ============================<br>
    执行格式：chgrp [-R] groupname name ( name 可为档名或目录名 )<br>
    Example :<br>
    %chgrp vlsi file1<br>
    将档案 file1 之群组拥有权，改为 vlsi 群组。<br>
    %chgrp -R image dir1<br>
    将目录dir1，及其下所有档案和子目录，改为 image 群组。<br>
    <br>
    ．改变档案或目录之最後修改时间<br>
    ==============================<br>
    执行格式：touch name ( name 可为档案或目录名称。)<br>
    <br>
    档案之连结<br>
    ==========<br>
    同一档案，可拥有一个以上之名称，可将档案做数个连结。<br>
    执行格式：ln oldname newname ( Hard link )<br>
    Example ：<br>
    ln file1 file2 　　将名称 file2，连结至档案 file1。<br>
    <br>
    执行格式：ln -s oldname newname ( Symblick link )<br>
    Example ：<br>
    ln -s file3 file4　将名称 file4，连结至档案file3。<br>
    <br>
    档案之字串找寻<br>
    ==============<br>
    执行格式：grep string file<br>
    Example ：<br>
    grep abc file1<br>
    寻找档案file1中，列出字串 abc 所在之整行文字内容。<br>
    <br>
    找寻档案或命令之路径<br>
    ====================<br>
    执行格式：whereis command ( 显示命令之路径。)<br>
    执行格式：which command ( 显示命令之路径，及使用者所定义之别名。)<br>
    执行格式：whatis command ( 显示命令功能之摘要。)<br>
    执行格式：find search-path -name filename -print<br>
    ( 搜寻指定路径下，某档案之路径 。)<br>
    Example ：<br>
    %find / -name file1 -print ( 自根目录下，寻找档名为 file1 之路径。.<br>
    <br>
    比较档案或目录之内容<br>
    ====================<br>
    执行格式：diff [-r] name1 name2 ( name1 name2 可同时为档名，或目录名称。)<br>
    Example :<br>
    %diff file1 file2<br>
    比较档案 file1 与 file2 内，各行之不同处。<br>
    %diff -r dir1 dir2<br>
    比较目录 dir1 与 dir2 内，各档案之不同处。<br>
    <br>
    档案列印输出<br>
    ============<br>
    使用者可用 .login 档中之 setenv PRINTER，来设定列印资料时的列表机名。<br>
    printername :sp1 或 sp2 (1005 教室)<br>
    Example ：<br>
    %setenv PRINTER sp2 设定自 sp2 列印资料。<br>
    <br>
    一般档案之列印<br>
    ==============<br>
    执行格式：lpr [-Pprinter-name] filename<br>
    %lpr file1 或 lpr -Psp2 file1<br>
    自 sp2，列印档案 file1。<br>
    <br>
    执行格式：enscript [-Pprinter-name] filename<br>
    %enscript file3 或 enscript -Psp1 file3<br>
    自 sp1 列印档案 file3。<br>
    <br>
    ．troff 档案之列印<br>
    ==================<br>
    执行格式：ptroff [-Pprinter-name] [-man][-ms] filename<br>
    %ptroff -man /usr/local/man/man1/ptroff.1<br>
    以 troff 格式，自 Apple laser writer 列印 ptroff 命令之使用说明。<br>
    <br>
    %ptroff -Psp2 -man /usr/man/man1/lpr1<br>
    以 troff 格式，自 sp2 列印 lpr 命令之使用说明。<br>
    <br>
    <br>
    列表机控制命令<br>
    ==============<br>
    ．检查列表机状态，及列印工作顺序编号和使用者名称<br>
    ================================================<br>
    执行格式：lpq [-Pprinter -name]<br>
    %lpq 或 lpq -Psp1<br>
    检查 sp1 列表机之状态。<br>
    <br>
    ．删除列表机内之列印工作 ( 使用者仅可删除自己的列印工作 )<br>
    ========================<br>
    执行格式：lprm [-Pprinter -name] username 或 job number<br>
    %lprm user 或 lprm -Psp1 user<br>
    删除 sp1 中，使用者 user 的列印工作，此时使用者名称必须为 user。<br>
    %lprm -Psp2 456<br>
    删除 sp2 编号为 456 之列印工作。<br>
    <br>
    Job 之控制<br>
    ===========<br>
    UNIX O.S.,可於 foregrourd 及 background 同时处理多个 process。<br>
    一般使用者执行命令时，皆是在 foreground 交谈式地执行 process，亦可将 
    process<br>
    置於 background 中，以非交谈式来执行 process。<br>
    <br>
    ．查看系统之 process<br>
    ====================<br>
    执行格式：ps [-aux]<br>
    Example:<br>
    %ps 或 ps -x (查看系统中，属於自己的 process。)<br>
    %ps -au 　 (查看系统中，所有使用者的 process。)<br>
    %ps -aux 　 (查看系统中，包含系统内部，及所有使用者的 process。)<br>
    <br>
    ．结束或终止 process<br>
    ====================<br>
    执行格式：kill [-9] PID ( PID 为利用 ps 命令所查出之 process ID。)<br>
    Example:<br>
    %kill 456 或 kill -9 456<br>
    终止 process ID 为 456 之 process。<br>
    <br>
    ．在 background 执行 process 的方式<br>
    ===================================<br>
    执行格式：command &amp; (於 command 後面加入一 &quot;&amp;&quot; 
    符号即可。)<br>
    Example:<br>
    %cc file1.c &amp;<br>
    将编译 file1.c 档案之工作，置於 background 执行。<br>
    <br>
    执行格式：按下 &quot;Control Z&quot; 键，暂停正在执行的 process。键入 
    &quot;bg&quot; 命令，<br>
    命令，将所暂停的 process，置入 background 中继续执行。<br>
    Example:<br>
    %cc file2.c<br>
    ^Z<br>
    Stopped<br>
    %bg<br>
    <br>
    <br>
    ．查看正在 background 中执行的 process<br>
    ======================================<br>
    执行格式：jobs<br>
    <br>
    ．结束或终止在 background 中的 process<br>
    ======================================<br>
    执行格式：kill %n<br>
    (n 为利用 &quot;jobs&quot; 命令，所查看出的 background job 编号)<br>
    Example:<br>
    %kill % 终止在 background 中的第一个 job。<br>
    %kill %2 终止在 background 中的第二个 job。<br>
    <br>
    shell varialbe<br>
    ==============<br>
    ．查看 shell variable 之设定值<br>
    ==============================<br>
    执行格式：set 　　 查看所有 shell variable 之设定值。<br>
    %set<br>
    <br>
    执行格式：echo $variable-name 显示指定的 shell variable 之设定值。<br>
    %echo $PRINTER<br>
    sp1<br>
    <br>
    ．设定 shell variable<br>
    =====================<br>
    执行格式：set var = value<br>
    Example:<br>
    %set term=vt100<br>
    设定 shell variable &quot;term&quot; 为 VT100 终端机之型式。<br>
    <br>
    ．删除 shell variable<br>
    =====================<br>
    执行格式：unset var<br>
    Example:<br>
    %unset PRINTER<br>
    删除 shell variable &quot;PRINTER&quot; 之设定值。<br>
    <br>
    environment variable<br>
    =====================<br>
    ．查看 environment variable 之设定值<br>
    ====================================<br>
    执行格式：setenv 　查看所有 environment variable 之设定值。<br>
    Example: %setenv<br>
    <br>
    执行格式：echo $NAME 显示指定的 environment variable &quot;NAME&quot; 
    之设定值。<br>
    Example:<br>
    %echo $PRINTER<br>
    显示 environment variable &quot;PRINTER&quot; 列表机名称之设定值。<br>
    <br>
    ．设定 environment variable<br>
    ===========================<br>
    执行格式：setenv NAME word<br>
    Example:<br>
    %setenv PRINTER sp1<br>
    设定 environment variable &quot;PRINTER&quot; 列表机名称为 sp1。<br>
    <br>
    ．删除 environment variable<br>
    ===========================<br>
    执行格式：unsetenv NAME<br>
    Example:<br>
    %unsetenv PRINTER<br>
    删除 environment variable &quot;PRINTER&quot; 列表机名称之设定值。<br>
    <br>
    alias<br>
    =====<br>
    ．查看所定义的命令之 alias<br>
    ==========================<br>
    执行格式： alias 查看自己目前定义之所有命令，及所对应之 alias 
    名称。<br>
    执行格式： alias name 查看指定之 alias 名称所定义之命令。<br>
    Example:<br>
    %alias dir (查看别名 dir 所定义之命令)<br>
    ls -atl<br>
    <br>
    ．定义命令之 alias<br>
    ==================<br>
    执行格式： alias name 'command line'<br>
    Example:<br>
    % alias dir 'ls -l'<br>
    将命令 &quot;ls - l&quot; 定义别名为 dir。<br>
    <br>
    ．删除所定义之 alias<br>
    ====================<br>
    执行格式： unalias name<br>
    Example:<br>
    %unalias dir (删除别名为 dir 之定义。)<br>
    %unalias * (删除所有别名之设定。)<br>
    <br>
    <br>
    history<br>
    =======<br>
    ．设定命令记录表之长度<br>
    ======================<br>
    执行格式： set history = n<br>
    Example:<br>
    %set history = 40<br>
    设定命令记录表之长度为 40 (可记载执行过之前面 40 个命令)。<br>
    <br>
    ．查看命令记录表之内容<br>
    ======================<br>
    执行格式： history<br>
    <br>
    ．使用命令记录表<br>
    ================<br>
    执行格式： !!<br>
    Example: %!! (重覆执行前一个命令)<br>
    执行格式： !n ( n 为命令记录表之命令编号。)<br>
    Example: %!5 ( 执行命令记录表中第五个命令。)<br>
    执行格式： !string ( 重覆前面执行过以 string 为起始字元之命令。)<br>
    Example: %!cat ( 重覆前面执行过，以 cat 为起始字元之命令。)<br>
    <br>
    ．显示前一个命令之内容<br>
    ======================<br>
    执行格式： !!：p<br>
    <br>
    ．更改前一命令之内容并执行之<br>
    ============================<br>
    执行格式： ^oldstring ^newstring<br>
    将前一命令中 oldstring 的部份，改成 newstring，并执行之。<br>
    Example:<br>
    %find . -name file1.c -print<br>
    ^file1.c^core<br>
    %find . -name core -print<br>
    <br>
    注：档案 core 
    为执行程式或命令发生错误时，系统所产生的档案。作为侦错(debug)之□<br>
    ，因其所占空间极大，通常将之删除。<br>
    <br>
    资料之压缩<br>
    ==========<br>
    为了避免不常用的档案或资料，占用太大的磁碟空间，请使用者将之压缩。欲使用压缩过<br>
    的档案或资料前，将之反压缩，即可还原成原来之资料型式。凡是经过压缩处理之档案，<br>
    会在档名後面附加 &quot; .Z &quot; 之字元，表示此为一压缩档案。<br>
    <br>
    ．压缩资料<br>
    ==========<br>
    执行格式：compress filename 压缩档案<br>
    执行格式：compressdir directory-name 压缩目录<br>
    <br>
    ．解压缩还原资料<br>
    ================<br>
    执行格式：uncompress filename　　　　 反压缩档案<br>
    执行格式：uncompressdir directory-name 反压缩目录<br>
    <br>
    pipe-line 之使用<br>
    ================<br>
    执行格式：command1 | command2<br>
    将 command1 执行结果，送到 command2 做为 command2 的输入。<br>
    Example:<br>
    %ls -Rl | more<br>
    以分页方式，列出目前目录下所有档案，及子目录之名称。<br>
    %cat file1 | more<br>
    以分页方式，列出档案 file1 之内容。<br>
    <br>
    I/O control<br>
    ===========<br>
    ．标准输入之控制<br>
    ================<br>
    执行格式：command-line &lt; file<br>
    将 file 做为 command-line 之输入。<br>
    Example:<br>
    %mail -s &quot;mail test&quot; user@iis.sinica.edu.tw &lt; file1<br>
    将档案 file1 当做信件之内容，Subject 名称为 mail test,送给收信人。<br>
    <br>
    ．标准输出之控制<br>
    ================<br>
    执行格式：command &gt; filename<br>
    将 command 之执行结果，送至指定的 filename 中。<br>
    Example: %ls -l &gt; list<br>
    将执行 &quot;ls -l&quot; 命令之结果，写入档案 list 中。<br>
    执行格式：command &gt;! filename<br>
    同上，若 filename 之档案已经存在，则强迫 overwrite。<br>
    Example: %ls -lg &gt;! list<br>
    将执行 &quot;ls - lg&quot; 命令之结果，强迫写入档案 list 中。<br>
    执行格式：command &gt;&amp; filename<br>
    将 command 执行时，萤幕上所产生的任何讯息，写入指定的 filename 
    中。<br>
    Example: %cc file1.c &gt;&amp; error<br>
    将编译 file1.c 档案时，所产生之任何讯息，写入档案 error 中。<br>
    执行格式：command &gt;&gt; filename<br>
    将 command 执行结果，附加(append)到指定的 filename 中。<br>
    Example: %ls - lag &gt;&gt; list<br>
    将执行 &quot;ls - lag&quot; 命令之结果，附加(append)到档案 list 中。<br>
    执行格式：command &gt;&gt;&amp; filename<br>
    将 command 执行时，萤幕上所产生的任何讯息，附加於指定的 filename中。<br>
    Example: %cc file2.c &gt;&gt;&amp; error<br>
    将编译 file2.c 档案时，萤幕所产生之任何讯息，附加於档案 error 
    中。<br>
    <br>
    查看系统中的使用者：<br>
    ===================<br>
    执行格式： who 或 finger<br>
    执行格式： w<br>
    执行格式： finger username or finger username@domainname<br>
    <br>
    改变自己的 username 进入其他使用者的帐号，拥有其使用权利。<br>
    =========================================================<br>
    执行格式： su username<br>
    Example:<br>
    %su user 进入使用者 user 之帐号<br>
    passwrod: 输入使用者 user 之密码<br>
    <br>
    查看 username：<br>
    ==============<br>
    执行格式： who am i 查看 login 时，自己的 username。<br>
    执行格式： whoami 查看目前的 username。若已执行过 &quot;su&quot;命令(switch 
    user)，<br>
    则显示出此 user 之 username。<br>
    <br>
    查看目前系上所有工作站的使用者:<br>
    ===============================<br>
    执行格式: rusers<br>
    &lt;CTRL&gt;&lt;C&gt; =&gt; 结束<br>
    <br>
    与某工作站上的使用者交谈:<br>
    =========================<br>
    执行格式: talk username@hostname 或 talk username@ip_address<br>
    Example:<br>
    1. 可先利用 rusers 指令查看网路上的使用者<br>
    2. 假设自己的帐号是 u84987 ，在工作站 indian 上使用，现在想要与 doc 
    上的<br>
    u84123 交谈。<br>
    %talk u84123@doc ==&gt; 此时萤幕上将会出现等待画面<br>
    在对方(u84123)萤幕上将会出现下列讯息<br>
    Message from Talk_Daemon@Local_host_name at xx:xx<br>
    talk: connection requested by u84987@indian<br>
    talk: respond with: talk u84987@indian<br>
    <br>
    此时对方(u84123) 必须执行 talk u84987@indian 即可互相交谈。<br>
    最後可按&lt;CRTL&gt;&lt;C&gt;结束。<br>
    <br>
    检查远端电脑系统是否正常<br>
    ========================<br>
    执行格式：ping hostname 或 ping IP-Address<br>
    Example:<br>
    %ping doc<br>
    <br>
    电子邮件(E-mail)的使用简介<br>
    ==========================<br>
    本系之 E-mail address 为 ice.ntnu.edu.tw<br>
    <br>
    ..将档案当做 E-mail 的内容送出<br>
    =============================<br>
    执行格式：mail -s &quot;Subject-string&quot; username@address &lt; filename<br>
    %mail -s &quot;program&quot; user &lt; file.c<br>
    将 file.c 当做 mail 的内容，送至 user, subject name 为 program。<br>
    <br>
    ..传送 E-mail 给本系使用者<br>
    ========================<br>
    执行格式：mail username<br>
    %mail user<br>
    <br>
    ..传送 E-mail 至 外地<br>
    ====================<br>
    执行格式： mail username@receiver-address<br>
    Example<br>
    %mail paul@gate.sinica.edu.tw<br>
    Subject : mail test<br>
    :<br>
    :<br>
    键入信文内容<br>
    :<br>
    :<br>
    按下 &quot;Control D&quot; 键或 &quot; . &quot; 键结束信文。<br>
    <br>
    连按两次 &quot;Control C&quot; 键，则中断工作，不送此信件。<br>
    <br>
    Cc:<br>
    ( Carbon copy : 复制一份信文，给其他的收信人 )<br>
    <br>
    ..检查所传送之 E-mail 是否送出，或滞留於本所之邮件伺服站中<br>
    =========================================================<br>
    执行格式：/usr/lib/sendmail -bp<br>
    ( 若萤幕显示为 &quot;Mail queue is empty&quot; 之讯息，表示 mail 已送出。<br>
    若为其它错误讯息，表示 E-mail 因故尚未送出。)<br>
    <br>
    ..读取信件<br>
    =========<br>
    执行格式: mail<br>
    常用指令如下:<br>
    cd [directory] chdir to directory or home if none given<br>
    d [message list] delete messages<br>
    h print out active message headers<br>
    m [user list] mail to specific users<br>
    n goto and type next message<br>
    p [message list] print messages<br>
    q quit, saving unresolved messages in mbox<br>
    r [message list] reply to sender (only) of messages<br>
    R [message list] reply to sender and all recipients of messages<br>
    s [message list] file append messages to file<br>
    t [message list] type messages (same as print)<br>
    u [message list] undelete messages<br>
    v [message list] edit messages with display editor<br>
    w [message list] file append messages to file, without from line<br>
    x quit, do not change system mailbox<br>
    z [-] display next [previous] page of headers<br>
    ! shell escape<br>
    <br>
    档案编辑器 vi 之使用方法简介<br>
    ============================<br>
    vi、celvis(cvi) 
    是在工作站上被广大使用的中英文编辑软体。对初学者而言，<br>
    常因其特殊的使用方法，而不得其门而入；对已经在使用 vi 
    的使用者来说，也<br>
    常见因对 vi 的不熟悉或不够了解，而无法发挥出 vi 
    强大的编辑能力，以下将<br>
    介绍 vi 之使用方法简介。<br>
    <br>
    ..本文内容大纲<br>
    =============<br>
    进入 vi<br>
    离开 vi<br>
    输入模式<br>
    如何进入输入模式<br>
    如何离开输入模式<br>
    指令模式<br>
    游标的移动<br>
    视窗的移动<br>
    删除、复制及修改指令介绍(delete、change、yank)<br>
    删除与修改(delete、replace)<br>
    搬移与复制(delete/put、yank/put)<br>
    指令重覆<br>
    取消前一动作(undo)<br>
    字串搜寻<br>
    资料的连接与分行<br>
    环境的设定<br>
    ex 指令<br>
    其它方面<br>
    中文编辑<br>
    恢复编辑时被中断的档案<br>
    编辑多个档案<br>
    <br>
    vi 是 visual editor 的缩写，是 UNIX 
    所提供的编辑器之一。它提供使用者一个<br>
    视窗的编辑环境，在此视窗下，使用者可编辑所要的档案。<br>
    <br>
    ..进入vi<br>
    =======<br>
    直接执行 vi编辑程式即可：<br>
    %vi test<br>
    此刻萤幕上会出现 vi 的编辑视窗，同时 vi 
    会将档案复制一份至记忆体中<br>
    的缓冲区 (buffer) 。 vi会保留在磁碟中的档案不变，而先对缓冲区的档<br>
    案作编辑，编辑完成後，使用者可决定是否要取代原来旧有的档案。<br>
    <br>
    ..离开vi<br>
    =======<br>
    若在输入模式下，则先利用《ESC》进入指令模式，而後即可选用下列指令<br>
    离开vi。<br>
    ：q! 离开vi，并放弃刚在缓冲区内编辑的内容。<br>
    ：wq 将缓冲区内的资料写入磁碟中，并离开vi。<br>
    ：ZZ 同wq。<br>
    ：x 同wq。<br>
    ：w 将缓冲区内的资料写入磁碟中，但并不离开vi。<br>
    ：q 离开vi，若档案被修改过，则会被要求确认是否放弃修改的内容。<br>
    此指令可与：w 配合使用。<br>
    <br>
    ..vi 的操作模式<br>
    ==============<br>
    vi 提供两种操作模式：输入模式(insert mode)和指令模式(command mode)<br>
    。当使用者进入 vi 
    後，即处在指令模式下，此刻键入之任何字元皆被视为<br>
    指令。在此模式下可进行删除、修改等动作。若要输入资料，则需进入输入<br>
    模式。<br>
    <br>
    ..输入模式<br>
    =========<br>
    如何进入输入模式<br>
    a (append) 由游标之後加入资料。<br>
    A 由该行之末加入资料。<br>
    i (insert) 由游标之前加入资料。<br>
    I 由该行之首加入资料。<br>
    o (open) 新增一行於该行之下供输入资料之用。<br>
    O 新增一行於该行之上供输入资料之用。<br>
    <br>
    如何离开输入模式<br>
    《ESC》 结束输入模式。<br>
    <br>
    ..指令模式<br>
    =========<br>
    游标之移动<br>
    h 向左移一个字元。<br>
    j 向上移一个字元。<br>
    k 向下移一个字元。<br>
    l 向右移一个字元。<br>
    0 移至该行之首<br>
    $ 移至该行之末。<br>
    ^ 移至该行的第一个字元处。<br>
    H 移至视窗的第一列。<br>
    M 移至视窗的中间那列。<br>
    L 移至视窗的最後一列。<br>
    G 移至该档案的最後一列。<br>
    + 移至下一列的第一个字元处。<br>
    - 移至上一列的第一个字元处。<br>
    ( 移至该句之首。 (注一)<br>
    ) 移至该句之末。<br>
    { 移至该段落之首。 (注二)<br>
    } 移至该段落之末。<br>
    nG 移至该档案的第 n 列。<br>
    n+ 移至游标所在位置之後的第 n 列。<br>
    n- 移至游标所在位置之前的第 n 列。<br>
    &lt;Ctrl&gt;&lt;g&gt; 
    会显示该行之行号、档案名称、档案中最末行之行号、游标<br>
    所在行号占总行号之百分比。<br>
    <br>
    注一：句子(sentence)在vi中是指以『！』、『.』或『？』结束的一串字。<br>
    注二：段落(paragraph)在vi中是指以空白行隔开的文字。<br>
    <br>
    ..视窗的移动<br>
    ===========<br>
    &lt;Ctrl&gt;&lt;f&gt; 视窗往下卷一页。<br>
    &lt;Ctrl&gt;&lt;b&gt; 视窗往上卷一页。<br>
    &lt;Ctrl&gt;&lt;d&gt; 视窗往下卷半页。<br>
    &lt;Ctrl&gt;&lt;u&gt; 视窗往上卷半页。<br>
    &lt;Ctrl&gt;&lt;e&gt; 视窗往下卷一行。<br>
    &lt;Ctrl&gt;&lt;y&gt; 视窗往上卷一行。<br>
    <br>
    ..删除、复制及修改指令介绍 (此单元较少使用)<br>
    =========================<br>
    d(delete)、c(change)和y(yank)这一类的指令在 vi 中的指令格式为：<br>
    Operator + Scope = command<br>
    (运算子) (范围)<br>
    运算子：<br>
    d 删除指令。删除资料，但会将删除资料复制到记忆体缓冲区。<br>
    y 将资料(字组、行列、句子或段落)复制到缓冲区。<br>
    p 放置(put)指令，与 d 和 y 配和使用。可将最後delete或yank的资<br>
    料放置於游标所在位置之行列下。<br>
    c 修改(change)指令，类似delete与insert的组和。删除一个字组、句<br>
    子等之资料，并插入新键资料。<br>
    <br>
    范围：<br>
    e 由游标所在位置至该字串的最後一个字元。<br>
    w 由游标所在位置至下一个字串的第一个字元。<br>
    b 由游标所在位置至前一个字串的第一个字元。<br>
    $ 由游标所在位置至该行的最後一个字元。<br>
    0 由游标所在位置至该行的第一个字元。<br>
    ) 由游标所在位置至下一个句子的第一个字元。<br>
    ( 由游标所在位置至该句子的第一个字元。<br>
    { 由游标所在位置至该段落的最後一个字元。<br>
    } 由游标所在位置至该段落的第一个字元。<br>
    <br>
    整行动作<br>
    dd 删除整行。<br>
    D 以行为单位，删除游标後之所有字元。<br>
    cc 修改整行的内容。<br>
    yy yank整行，使游标所在该行复制到记忆体缓冲区。<br>
    <br>
    ..删除与修改<br>
    ===========<br>
    x 删除游标所在该字元。<br>
    X 删除游标所在之前一字元。<br>
    dd 删除游标所在该行。<br>
    r 用接於此指令之後的字元取代(replace)游标所在字元。<br>
    如： ra 将游标所在字元以 a 取代之。<br>
    R 进入取代状态，直到《ESC》为止。<br>
    s 删除游标所在之字元，并进入输入模式直到《ESC》。<br>
    S 删除游标所在之该行资料，并进入输入模式直到《ESC》。<br>
    <br>
    ..搬移与复制<br>
    ==========<br>
    利用 delete 及 put 指令可完成资料搬移之目的。<br>
    利用 yank 及 put 指令可完成资料复制之目的。<br>
    yank 和 delete 可将指定的资料复制到记忆体缓冲区，而藉由 put 指令<br>
    可将缓冲区内的资料复制到萤幕上。<br>
    例：<br>
    搬移一行 ．在该行执行 dd<br>
    ．游标移至目的地<br>
    ．执行 p<br>
    复制一行 ．在该行执行 yy<br>
    ．游标移至目的地<br>
    ．执行 p<br>
    <br>
    ..指令重复<br>
    =========<br>
    在指令模式中，可在指令前面加入一数字 n，则此指令动作会重复执行 
    n<br>
    次。<br>
    例：<br>
    删除10行 ．10dd<br>
    复制10行 ．10yy<br>
    ．游标移至目的地<br>
    ．p<br>
    指标往下移10行 ．10j<br>
    <br>
    ..取消前一动作(Undo)<br>
    ===================<br>
    即复原执行上一指令前的内容。<br>
    <br>
    u 恢复最後一个指令之前的结果。<br>
    U 恢复游标该行之所有改变。<br>
    <br>
    ..搜寻<br>
    =====<br>
    在vi中可搜寻某一字串，使游标移至该处。<br>
    <br>
    /字串 往游标之後寻找该字串。<br>
    ?字串 往游标之前寻找该字串。<br>
    n 往下继续寻找下一个相同的字串。<br>
    N 往上继续寻找下一个相同的字串。<br>
    <br>
    ..资料的连接<br>
    ===========<br>
    J 句子的连接。将游标所在之下一行连接至游标该行的後面。<br>
    <br>
    若某行资料太长亦可将其分成两行，只要将游标移至分开点，进入输入模式<br>
    (可利用 a、i等指令)再按《Enter》即可。<br>
    <br>
    ..环境的设定<br>
    ===========<br>
    ：set nu 设定资料的行号。<br>
    ：set nonu 取消行号设定。<br>
    ：set ai 自动内缩。<br>
    ：set noai 取消自动内缩。<br>
    <br>
    自动内缩(automatic indentation)<br>
    在编辑文件或程式时，有时会遇到需要内缩的状况，『：set ai』即提供自<br>
    动内缩的功能，用下例解释之：<br>
    ．vi test<br>
    ．(进入编辑视窗後)<br>
    this is the test for auto indent<br>
    《Tab》start indent ← ：set ai (设自动内缩)<br>
    《Tab》data<br>
    《Tab》data<br>
    《Tab》data ← ：set noai (取消自动内缩)<br>
    the end of auto indent.<br>
    ．注：&lt;Ctrl&gt;&lt;d&gt; 可删除《Tab》字元。<br>
    <br>
    ..ex指令<br>
    =======<br>
    读写资料<br>
    ：w 将缓冲区的资料写入磁碟中。<br>
    ：10,20w test 将第10行至第20行的资料写入test档案。<br>
    ：10,20w&gt;&gt;test 将第10行至第20行的资料加在test档案之後。<br>
    ：r test 将test档案的资料读入编辑缓冲区的最後。<br>
    <br>
    删除、复制及搬移<br>
    ：10,20d 删除第10行至第20行的资料。<br>
    ：10d 删除第10行的资料。<br>
    ：%d 删除整个编辑缓冲区。<br>
    ：10,20co30 将第10行至第20行的资料复制至第30行之後。<br>
    ：10,20mo30 将第10行至第20行的资料搬移至第30行之後。<br>
    <br>
    字串搜寻与取代<br>
    s(substitute)指令可搜寻某行列范围。<br>
    g(global)指令则可搜寻整个编辑缓冲区的资料。<br>
    s指令以第一个满足该条件的字串为其取代的对象，若该行有数个满足该条<br>
    件的字串，也仅能取代第一个，若想取代所有的字串则需加上g参数。<br>
    ：1,$s/old/new/g 将档案中所有的『old』改成『new』。<br>
    ：10,20s/^/ / 将第10行至第20行资料的最前面插入5个空白。<br>
    ：%s/old/new/g 将编辑缓冲区中所有的『old』改成『new』。<br>
    <br>
    ..恢复编辑时被中断的档案<br>
    =======================<br>
    在编辑过程中，若系统当掉或连线中断，而缓冲区的资料并还未<br>
    被写回磁碟时，当再度回到系统，执行下列指令即可回复中断前<br>
    的档案内容。<br>
    %vi -r filename<br>
    <br>
    ..编辑多个档案<br>
    =============<br>
    vi亦提供同时编辑多个档案的功能，方法如下：<br>
    %vi file1 file2 ..<br>
    <br>
    当第一个档案编修完成後，可利用『：w』将该缓冲区存档，而後<br>
    再利用 『：n』载入下一个档案。<br>
    </td>
  </tr>
</table>

<p><br>
<br>
<br>
<br>
<br>
<br>
</p>
</body>
</html>
