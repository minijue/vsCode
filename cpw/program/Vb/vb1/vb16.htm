<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>您现在的位置是</title>
</head>

<body>

<div align="center"><center>

<table border="1" cellspacing="0" cellpadding="2" width="100%" style="font-size: 9pt"
bordercolor="#000000" bordercolordark="#FFFFFF">
  <tr bgcolor="#CCFFCC">
    <td><span style="font-size: 9pt">您现在的位置是： <b><a href="../../progidx.htm">编程技巧</a> --&gt; 
      <a href="../Vbidx099.htm">VB</a></b></span></td>      
  </tr>      
</table>      
</center></div><div align="center"><center>      
      
<table border="1" width="100%" style="font-size: 9pt" bgcolor="#FFFFFF"      
bordercolor="#000000" cellpadding="2" cellspacing="0" bordercolordark="#FFFFFF">      
  <tr>      
    <td width="85%" align="left" valign="top"><table border="1" width="32%" style="font-size: 9pt" height="30"      
    cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" bordercolor="#000000"      
    bordercolordark="#FFFFFF">      
      <tr>      
        <td width="100%" bgcolor="#4264B5"><p align="center"><span style="font-size: 9pt"><font      
        color="#FFFFFF">资料整理&middot;<a href="http://chinaprog.yeah.net" target="_blank"      
        style="color: rgb(255,255,255)">中国程序员网站</a></font></span></td>      
      </tr>      
    </table>      
      <p align="center">一组VB应用技巧      
      <p><br>
      路径问题<br>
      <br>
      &nbsp;&nbsp;&nbsp; 很多程序员在打开文件、调用程序时喜欢使用绝对文件路径,结果在另一台计算机上运行时便会遇到路径不对或需要重新拷贝到该目录的问题。其实，只要使用相对路径，就完全可以避免这个问题。在Windows下，某个程序一旦运行，除非特别指定了工作目录，一般该程序文件所在的目录就是工作目录，其他目录可以用工作目录为参照系。在编程中"App.Path"即为当前工作目录。另外，用安装程序向导制作安装盘时，只要在步骤"文件小结"中添加某文件时指定"文件详细资料"的路径即可安装该文件到指定的目录下。<br>
      <br>
      生成透明窗体<br>
      <br>
    利用API函数可做出透明窗体。以下为一种方法：<br>
    Me.AutoRedraw = True<br> 
      　　hBitmap = CreateCompatibleBitmap(Me.hdc, 0, 0)<br> 
      　　SelectObject Me.hdc, hBitmap<br> 
      <br> 
      调用Bitblt API函数<br> 
      <br> 
    在编程中我们经常遇到需要拷贝图形的问题,一般利用API函数Bitblt或Stretchblt(后者可缩放).<br> 
      Declare Function BitBlt Lib "gdi32" Alias "BitBlt" (ByVal hDestDC&nbsp;<br>
      As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long,&nbsp;<br>
      ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long,&nbsp;<br>
      ByVal ySrc As Long, ByVal dwRop As Long) As Long<br> 
      Declare Function StretchBlt Lib "gdi32" Alias "StretchBlt" (ByVal&nbsp;<br>
      hdc As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long,&nbsp;<br>
      ByVal nHeight As Long, ByVal hSrcDC As Long, ByVal xSrc As Long,&nbsp;<br>
      ByVal ySrc As Long, ByVal nSrcWidth As Long, ByVal nSrcHeight As&nbsp;<br>
      Long, ByVal dwRop As Long) As Long<br> 
    当所拷贝的图形为画图语句所创建时,有时就会出现拷贝不上去的毛病,这时不用着急,请确认在拷贝之前对所画的图形进行刷新,即调用Refresh方法.<br> 
      <br> 
      Findwindow()函数用法<br> 
      <br> 
      &nbsp; 要使用此函数,先从API VIEW中拷贝如下的FindWindow()函数的声明：&nbsp;<br>
      Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal&nbsp;<br>
      lpClassName As String, ByVal lpWindowName As String) As Long&nbsp;<br>
      &nbsp; 这个函数有两个参数，第一个是要找的窗口的类，第二个是要找的窗口的标题。在搜索的时 候不一定两者都知道，但至少要知道其中的一个。有的窗口的标题是比较容易得到的，所以应使用标题进行搜索。但有些软件的标题是不固定的，如一些MDI程序，如果打开的文 件不同，窗口标题也不同，这时使用窗口类来搜索就比较方便。如果找到了满足条件的窗口，这个函数会返回该窗口的句柄，否则返回0。前面提到的VB的FindWindow()函数的声明将两个参数都定义为String类型，而在实际使用过 程中，如果我们要忽略某个参数，应将该参数的定义由<br> 
      As String改为As Any。这里的As Any相当 于C语言中的强制类型转换。例如，如果我们忽略窗口的类，应将定义修改如下：<br> 
      Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal&nbsp;<br>
      lpClassName As Any, ByVal lpWindowName As String) As Long&nbsp;<br>
      　　然后，在调用时使用如下语句：&nbsp;<br>
      　　hwndCalc = FindWindow(0&amp;, "abc")&nbsp;<br>
      　　这里的0&amp;就表示忽略类名。<br>
      <br>
      防止运行多个实例<br>
    在程序开始部分添加如下代码:<br>
    If App.PreInstance=True then&nbsp;<br>
      　　End<br>
      　　End If&nbsp;<br>
      <br>
      <br>
      为应用程序创建快捷方式<br>
      <br>
      &nbsp; 一般来说，软件在安装时都会创建一个快捷方式来方便用户使用，我们也可为自己的应用程序在桌面上创建一个快捷方式。安装Microsoft Visual Basic 4 .0后，将会有一个Setup Kit工具，其所带的STKIT432.DLL文件中提供了一个API函数fCreateShellLink可供用户来为应用程序创建快捷方式。下来举例说明其使用方法。<br> 
      　 在这里我们为NOTEPAD创建一个快捷方式。&nbsp;<br>
      1、在VB4.0中打开一个新工程文件，在FORM1上添加一个命令按钮Command1。 
      　<br>
      2、双击窗体，在General Declarations中输入下面代码：<br> 
      Private Declare Function fCreateShellLink Lib ″STKIT432.DLL"″<br> 
      (ByVal_ lpstrFolderName As String,ByVal lpstrLinkName As String,<br> 
      ByVal_lpstrLinkPath As String,ByV al lpstrLinkArgs As String) As Long 
      　　<br>
      3、双击Command1命令按钮，写如下代码：&nbsp;<br>
      Sub Command1_Click()&nbsp;<br>
      Dim lReturn As Long&nbsp;<br>
      lReturn=fCreateShellLink("..。.\Desktop",_"快捷方式Notepad","c:\win95\notepad.exe"," ")<br> 
      lReturn=fCreateShellLink(" ","快捷方式Notepad",_"c:\\win95\notepad .exe"," ")&nbsp;<br>
      lReturn=fCreateShellLink("\startup","快捷方式Notepad",_"c:\win95\notepad.exe"," ")&nbsp;<br>
      End Sub 　　<br>
      4、按F5运行，单击命令按钮command1，如果没有输入错误的话，桌面上就会出现NOTEPAD的快捷方式。运行环境：VB4.0(32)，中文WINDOWS95。<br>
    </td>     
  </tr>     
</table>     
</center></div>     

</body>

</html>
