<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>您现在的位置是</title>
</head>

<body>

<div align="center"><center>

<table border="1" cellspacing="0" cellpadding="2" width="100%" style="font-size: 9pt"
bordercolor="#000000" bordercolordark="#FFFFFF">
  <tr bgcolor="#CCFFCC">
    <td><span style="font-size: 9pt">您现在的位置是： <b><a href="../../progidx.htm">编程技巧</a> --&gt; 
      <a href="../Vbidx099.htm">Visual Basic</a></b></span></td>    
  </tr>    
</table>    
</center></div><div align="center"><center>    
    
<table border="1" width="100%" style="font-size: 9pt" bgcolor="#FFFFFF"    
bordercolor="#000000" cellpadding="2" cellspacing="0" bordercolordark="#FFFFFF">    
  <tr>    
    <td width="85%" align="left" valign="top"><table border="1" width="32%" style="font-size: 9pt" height="30"    
    cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" bordercolor="#000000"    
    bordercolordark="#FFFFFF">    
      <tr>    
        <td width="100%" bgcolor="#4264B5"><p align="center"><span style="font-size: 9pt"><font    
        color="#FFFFFF">资料整理&middot;<a href="http://chinaprog.yeah.net" target="_blank"    
        style="color: rgb(255,255,255)">中国程序员网站</a></font></span></td>    
      </tr>    
    </table>    
      <p align="center">用VB制作常居上层的浮动工具箱    
      <p><br>
      　<br>
      通过形象化的图标，浮动工具箱可以省去用户点击主菜单的麻烦。当鼠标位于其图标上时，在鼠标下方会自动“掉出”一个小标签，说明它的功能。而且常居上层，不会被打开的文件所覆盖。并且可以改变形状及位置，尽可能地减少所占用的桌面面积。&nbsp;<br>
      <br>
      能不能在我们自己的应用程序中使用这种先进手段呢?这里介绍一种用VB来实现的简单方法。主要编程思路是：引用 Windows APL函数，实现表单常居上层；建立控件数组，通过控件的 MouseMove事件，引发注释的弹出和消失。&nbsp;<br>
      <br>
      一、浮动工具箱的可视化实现方法&nbsp;<br>
      <br>
      1.在Form1 上放置控件SSRIBBON按钮(因为它本身有三种状态：按下、弹起、禁止使用，大部分图标按钮都是这类按钮)。再放置文本框 Text1(也可以用 Label控件，但效果会有所不同，稍后会讲到)，再放置一个命令按钮Command1。各控件属性见表1(表中只列出一个例子，其它的只要修改相应的属性即可)。&nbsp;<br>
      <br>
      2.单击GP3D1，按 ALT＋Del剪切，然后按 ALT＋Insert 复制若干，形成控件数组GP3D1(0)、GP3D1(2)、GP3D1(3)……，再如法建立Text1(0)、Text1(1)、Text1(3)……。&nbsp;<br>
      <br>
      3.调整按钮及文本框位置。&nbsp;<br>
      <br>
      在此期间，每一项工作都是必要的，如文本框的Visible值为 False，以确保程序启动时不显示文本框，而Enable值为False是为了在运行过程中，文本框不能输入文本。如果使用标签(Label)代替文本框，则不能纵向排列图标按钮，只能横向。因为下面的按钮会盖住Label，但使用Label要比文本框省内存。&nbsp;<br>
      <br>
      为了实现常居上层的效果，必须调用Windows API 函数，事实上VB的很多方法都引用于Windows API 。这里我们用SetWindowsPos过程，此过程在User.exe中定义，它是Windows系统重要的动态链接库。在VB中引用 API函数时，必须在通用声明部分声明注册。声明API函数往往比较麻烦且易出错，比如：&nbsp;<br>
      <br>
      Declare Sub SetWindowPos Lib ″User″ (ByVal hwnd As Integer, ByVal&nbsp;<br>
      hWndInsertAfter As Integer,ByVal X As Integer, ByVal Y As Integer,ByVal&nbsp;<br>
      cx As Integer, ByVal cy As Integer, ByVal wFlags As Integer)&nbsp;<br>
      <br>
      如果所有的API函数声明都这么输入，效率太低。好在各版本的VB都提供了一个Windows API Help程序，打开它，搜索 SetWindowPos ，找到以后点击超文本带出解释， 拷贝即可。&nbsp;<br>
      <br>
      二、创建代码在通用声明部分输入下列代码并声明一些常量及全程变量：&nbsp;<br>
      <br>
      Declare Sub setwindowpos Lib ″User″ (ByVal hwnd As Integer, ByVal&nbsp;<br>
      hWndInsertAfter As Integer, ByVal X As Integer, ByVal Y As Integer,&nbsp;<br>
      ByVal cx As Integer, ByVal cy As Integer, ByVal wFlags As Integer)&nbsp;<br>
      <br>
      Const SWP_NOSIZE = 1&nbsp;<br>
      <br>
      Const SWP_nomove = 2&nbsp;<br>
      <br>
      Const flags = SWP_NOSIZE Or SWP_nomove&nbsp;<br>
      <br>
      Const hwnd_topmost = －1&nbsp;<br>
      <br>
      Const hwnd_notopmost = －2&nbsp;<br>
      <br>
      Dim i As Integer&nbsp;<br>
      <br>
      Dim B As Integer&nbsp;<br>
      <br>
      为GP3D1按钮的MouseMove 事件添加如下代码，这里仅实现鼠标在其上时注释器弹出、不在其上时隐去的功能，读者可再加一个计时器控件和一些代码，即可很容易地实现鼠标位于其上片刻后注释器弹出的效果，这样就不会出现鼠标“路过”按钮时，注释器即出现的结果了。&nbsp;<br>
      <br>
      Sub GP3D1_MouseMove (index As Integer, Button As Integer, Shift&nbsp;<br>
      <br>
      As Integer, X As Single, Y As Single)&nbsp;<br>
      <br>
      i = index ′记录下当前鼠标位于哪个按钮上&nbsp;<br>
      <br>
      text1(i).Visible = True ″使其弹出&nbsp;<br>
      <br>
      If B &lt;> i Then ′使其它按钮隐去&nbsp;<br>
      <br>
      text1(B).Visible = False&nbsp;<br>
      <br>
      End If&nbsp;<br>
      <br>
      B = i ′请好好体会这个变量B的作用&nbsp;<br>
      <br>
      End Sub&nbsp;<br>
      <br>
      为Command1按钮的Click事件添加如下代码：&nbsp;<br>
      <br>
      Sub Command1_Click ()&nbsp;<br>
      <br>
      do While DoEvents() ′用DoEvents()实现空闲循环下的多任务监测&nbsp;<br>
      <br>
      setwindowpos hwnd, hwnd_topmost, 0, 0, 0, 0, flags ′实现常居上层&nbsp;<br>
      <br>
      loop&nbsp;<br>
      <br>
      End Sub&nbsp;<br>
      <br>
      为Command1按钮的MouseMove事件添加如下代码：&nbsp;<br>
      <br>
      Sub Command1_MouseMove (Button As Integer, Shift As Integer, X&nbsp;<br>
      <br>
      As Single, Y As Single)&nbsp;<br>
      <br>
      text1(i).Visible = False ′鼠标离开按钮区，位于命令按钮上时隐去注释器&nbsp;<br>
      <br>
      End Sub&nbsp;<br>
      <br>
      为Form1的MouseMove事件添加如下代码：&nbsp;<br>
      <br>
      Sub Form_MouseMove (Button As Integer, Shift As Integer, X&nbsp;<br>
      <br>
      As Single, Y As Single)&nbsp;<br>
      <br>
      text1(i).Visible = False ′鼠标离开按钮区，进入表单时隐去注释器&nbsp;<br>
      <br>
      End Sub     
    </td>    
  </tr>    
</table>    
</center></div>    

</body>

</html>
