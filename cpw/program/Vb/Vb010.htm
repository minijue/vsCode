<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>VB应用程序锦集（一）--API函数在VB中的应用（上）</title>
<link rel="stylesheet" href="my.css"
tppabs="http://person.zj.cninfo.net/~lifu/images/my.css">
</head>

<body style="font-size: 9pt" bgcolor="#FFFFFF">

<table border="0" cellspacing="2" cellpadding="0" bordercolor="#DED8CD" width="100%"
height="28">
  <tr bgcolor="#CCFFCC">
    <td height="10"><span style="font-size: 9pt">现在的位置是：<a href="Vb_idx.htm"
    tppabs="http://person.zj.cninfo.net/~lifu/index.html">Visual Basic</a> <b>&gt;</b> VB应用程序锦集（一）--API函数在VB中的应用（上）</span></td>
  </tr>
  <tr>
    <td height="14"></td>
  </tr>
</table>

<table border="0" width="100%" bgcolor="#E8E8E8">
  <tr>
    <td width="100%"><table border="1" width="32%" style="font-size: 9pt" height="30"
    cellspacing="0" cellpadding="2">
      <tr>
        <td width="100%" bgcolor="#4264B5"><p align="center"><font color="#FFFFFF">资料整理<span
        class="f">&middot;</span><a href="http://fasoft.yeah.net" target="_blank"
        style="color: rgb(255,255,255)">中国程序员网站</a></font></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%">　<table border="0" width="100%" style="font-size: 9pt">
      <tr>
        <td width="100%"></td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td width="100%"><p align="center"><span style="font-size: 9pt"><font color="#000000"><strong>VB应用程序锦集（一）--API函数在VB中的应用（上）</strong></font></span></td>
  </tr>
  <tr>
    <td width="100%"></td>
  </tr>
  <tr>
    <td><span style="font-size: 9pt">所谓API就是“应用程序接口”（Application 
    Programing Interface），是一些用C语言编写，由操作系统自身调用的函数。Windows 
    API函数由许多“动态链接库”或DLL组成。在32位Windows中，核心的Windows<br>
    API DLL有如下一些：<br>
    gdi32.dll----图形显示界面的API。<br>
    kernel32.dll----处理低级任务（比如内存和任务管理）的API。<br>
    user32.d11----处理窗口和消息（Visual Basic程序员能把其中一些当作事件访问）的API。<br>
    &nbsp;&nbsp; 还不断有新的API出现，处理新的操作系统扩展，比如E-MAIL、联网和新的外设。<br>
    &nbsp;&nbsp; 由于Windows API函数不是Visual Basic的内部函数，所以在使用它们之前必须显式地加以声明。要想得到正确格式化的函数声明，可以访问WINAPI目录下的文件WIN32API.TXT。<br>
    &nbsp;&nbsp; 本文只对Win95系统的API函数加以说明并调用Win95的内置功能。<br>
    <strong>重新启动计算机的实现</strong><br>
    &nbsp;&nbsp; 在Windows下安装过程序的用户可能都有这样的体会，当安装完某些应用程序后，安装程序会要求重新启动计算机以使设置生效。那么，如果要用VB程序重新启动计算机该如何实现呢？其实利用ExitWindowsEx函数即可。<br>
    程序的编写<br>
    1．首先运行VB，然后新建一个工程（工程类型为标准EXE），然后双击Form1窗体，进入代码（Code）输入框，在其中输入：<br>
    Private Declare Function ExitWindowsEx Lib &quot;user32&quot; (ByVal uFlags As Long, ByVal 
    dwReserved<br>
    As Long)As Long<br>
    2．点击“工具箱”中的commandbutton（命令按钮）工具，即可在窗体Form1中加入一个命令按钮，然后将该按钮属性中的Caption值定义为“重新启动”。完成之后双击该按钮，进入代码（code）输入框输入以下代码：<br>
    Private Sub Command1_Click()<br>
    ExitWindowsEx &amp;H43,0<br>
    End Sub<br>
    程序的执行<br>
    程序输入完成后，点击VB“运行”菜单中的“启动”或“全面编译”命令，然后点击“重新启动”按钮，即可重新启动计算机。<br>
    <strong>磁盘格式化</strong><br>
    &nbsp;&nbsp; 在Windows 9X中，当用鼠标右键单击“我的电脑”中的“3.5软盘A”然后在出现的右键菜单中选择“格式化”选项，就将弹出标准的“磁盘格式化”窗口。下面我们来看看如何在应用程序中利用函数轻松调用Windows 
    95标准的“磁盘格式化”窗口，实现对磁盘相应的操作功能。<br>
    程序的编写<br>
    1．与上例相同，首先运行VB，新建一个标准工程，然后利用“工具箱”在Form1窗体中加入一个命令按钮对象，将该命令按钮属性中的Caption值定义为“软盘格式化”。完成之后双击该按钮，在代码输入框中输入以下代码：<br>
    Private Sub Command1_Click()<br>
    Call FormatFloppy '调用FormatFloppy过程<br>
    End Sub<br>
    2．然后用鼠标右击窗体，选择右键菜单中的“添加/添加模块”选项，然后在出现的选择框中选择“模块”类型，接着在出现的模块代码输入框中加入以下代码：（注：模块是指一组声明的集合，其后为过程）<br>
    '通用声明<br>
    Public Const WM_CLOSE=&amp;H10<br>
    Declare Function FindWindow Lib &quot;user32&quot; Alias&quot;FindWindowA&quot;(ByVal 
    lpClassName As Any, ByVal<br>
    lpWindowName As Any)As Long<br>
    Delare Function GetWindowsDirectory Lib &quot;kernel32&quot; Alias 
    &quot;GetWindowsDirectoryA&quot; (ByVal lpBuffer<br>
    As String, ByVal nSize As Long) As Long<br>
    Declare Function SetWindowPos Lib &quot;user32&quot;(BvVal hwnd As Long ByVal 
    hWndInsertAfter As Long,<br>
    ByVal X As long, ByVal y As Long, ByVal cx As Long,ByVal cy As Long, ByVal wFlags As Long) 
    As Long<br>
    Declare Function GetDesktopWindow Lib &quot;user32&quot;() As Long<br>
    Declare Function LockWindowUpdate Lib &quot;user32&quot; (ByVal hwndLock As Long)As Long<br>
    Declare Function GetWindowRect Lib &quot;user32&quot;(ByVay hwnd As Long, lpRect As RECT) 
    As Long<br>
    Declare Sub Sleep Lib &quot;kernel32&quot; (ByValdwMilliseconds As Long)<br>
    Type RECT<br>
    &nbsp;&nbsp;&nbsp; Left As Long<br>
    &nbsp;&nbsp;&nbsp; Top As Long<br>
    &nbsp;&nbsp;&nbsp; Right As Long<br>
    &nbsp;&nbsp;&nbsp; Bottom As Long<br>
    End Type<br>
    TypePOINTAPI<br>
    &nbsp;&nbsp;&nbsp; X As Long<br>
    &nbsp;&nbsp;&nbsp; y As Long<br>
    End Type<br>
    Const SWP_NOSIZE=&amp;H1<br>
    Const SWP_NOZORDER=&amp;H4<br>
    'FormatFloppy()过程声明<br>
    Public Sub FormatFloppy()<br>
    &nbsp;&nbsp;&nbsp; Dim sBuffer As String, Windir As String, Procs As String, X<br>
    &nbsp;&nbsp;&nbsp; Dim lResult As Long<br>
    &nbsp;&nbsp;&nbsp; sBuffer = String$(255,0)<br>
    &nbsp;&nbsp;&nbsp; lResult = GetWindowsDirectory(sBuffer, Len(sBuffer))<br>
    &nbsp;&nbsp;&nbsp; Windir = Trim(sBuffer)<br>
    &nbsp;&nbsp;&nbsp; Procs = Left(Windir, lResult) &amp; &quot;\rundll32.exe 
    shell32.dll,SHFormatDrive&quot;<br>
    &nbsp;&nbsp;&nbsp; Call CenterDialog(&quot;Format - 3? Floppy (A:)&quot;)<br>
    &nbsp;&nbsp;&nbsp; X = Shell(Procs,1)<br>
    &nbsp;&nbsp;&nbsp; Call CenterDialog(&quot;Format - 3? Floppy (A:)&quot;)<br>
    &nbsp;&nbsp;&nbsp; k = LockWindowUpdate(0)<br>
    End Sub<br>
    ' CenterDialog 过程声明<br>
    Public Sub CenterDialog(WinText As String)<br>
    &nbsp;&nbsp;&nbsp; DoEvents<br>
    &nbsp;&nbsp;&nbsp; On Error Resume Next<br>
    &nbsp;&nbsp;&nbsp; Dim D3 As Long<br>
    &nbsp;&nbsp;&nbsp; D3 = LockWindowUpdate(GetDesktopWindow())<br>
    &nbsp;&nbsp;&nbsp; Dim wdth%<br>
    &nbsp;&nbsp;&nbsp; Dim hght%<br>
    &nbsp;&nbsp;&nbsp; Dim Scrwdth%<br>
    &nbsp;&nbsp;&nbsp; Dim Scrhght%<br>
    &nbsp;&nbsp;&nbsp; Dim lpDlgRect As RECT<br>
    &nbsp;&nbsp;&nbsp; Dim lpdskrect As RECT<br>
    &nbsp;&nbsp;&nbsp; Dim hTaskBar As Long<br>
    &nbsp;&nbsp;&nbsp; hTaskBar = FindWindow(0&amp;,WinText)<br>
    &nbsp;&nbsp;&nbsp; Call GetWindowRect(hTaskBar, lpDlgRect)<br>
    &nbsp;&nbsp;&nbsp; wdth% = lpDlgRect.Right - lpDlgRect.Left<br>
    &nbsp;&nbsp;&nbsp; hght% = lpDlgRect.Bottom - lpDlgRect.Top<br>
    &nbsp;&nbsp;&nbsp; Call GetWindowRect(GetDesktopWindow(),lpdskrect)<br>
    &nbsp;&nbsp;&nbsp; Scrwdth% = lpdskrect.Right - lpdskrect.Left<br>
    &nbsp;&nbsp;&nbsp; Scrhght% = lpdskrect.Bottom - lpdskrect.Top<br>
    &nbsp;&nbsp;&nbsp; X% = (Scrwdth% - wdth%) / 2<br>
    &nbsp;&nbsp;&nbsp; y% = (Scrhght% - hght%) / 2<br>
    &nbsp;&nbsp;&nbsp; Call SetWindowPos(hTaskBar, 0, X%, y%,0,0, SWP_NOZORDER Or SWP_NOSIZE)<br>
    &nbsp;&nbsp;&nbsp; DoEvents<br>
    End Sub<br>
    程序的执行<br>
    程序输入完成后，点击VB“运行”菜单中的“启动”或“全面编译”命令，点击“软盘格式化”按钮后选择要格式化的容量，即可对3.5英寸盘进行格式化操作。<br>
    <strong>调用版本信息框</strong><br>
    &nbsp;&nbsp; 在Windows程序中，点击“帮助”菜单中的“关于XXX”选项后，就会弹出该程序的版本信息框。其实，在<br>
    VB中，调用shellAbout函数不但可以实现标准的软件版本信息框，还可以随意更改其中的内容呢！<br>
    程序的编写<br>
    1．与前面类似，首先运行VB并新建一个标准工程，然后双击Form1窗口，在代码输入框中输入ShellAbout过<br>
    程代码：<br>
    Private Declare Function ShellAbout Lib &quot;shell32.dlI&quot; Alias 
    &quot;ShellAboutA&quot; (ByVal hWnd As Long, ByVal szApp As String, ByVal szOtherStuff As 
    String, ByVal hIcon As Long) As Long<br>
    其中ShellAbout声明如下：<br>
    HWnd设置窗口句柄，szApp设置窗口的“Caption”，szOtherStuff在“版权所有”和“使用权”之间的空白<br>
    处增加额外说明。<br>
    2．然后利用“工具箱”在Form1窗体中加入一个命令按钮对象，将该命令按钮属性中的Caption值定义为“版<br>
    本信息框”。完成之后双击该按钮，在代码输入框输入以下代码：<br>
    Private Sub Command1_Click()<br>
    &nbsp;&nbsp;&nbsp; Call ShellAbeut（hWnd, &quot;何发武天使工作室！&quot;，&quot;版本信息框&quot; 
    &amp; VbCrLf &amp; &quot;上帝与你同在！阿弥陀佛！&quot;，0)<br>
    End Sub<br>
    程序的执行<br>
    程序输入完成后，点击VB“运行”菜单中的“启动”或“全面编译”命令，点击“版本信息框”按钮，即可查看当前软件的版本信息。<br>
    <strong>查看“属性”</strong><br>
    &nbsp;&nbsp; 在Windows 9X中，增加了一个全新的概念--“属性”，每个对象都拥有自己的“属性”，在“属性”窗口里是关于对象的详细描述，并且不同的对象“属性”窗口的说明是不同的。我们可以用ShellExecuteEX函数直接调用“属性”标准窗口。下面的程序功能相当于用鼠标右键单击根目录下的“Autoexec.bat”并选择“属性”时，弹出的标准“属性”窗口。<br>
    程序的编写<br>
    1．首先运行VB，然后新建一个标准工程，然后利用“工具箱”在Form1窗体中加入一个命令按钮对象，将该命令按钮属性中的Caption值定义为“属性按钮”。完成之后双击该按钮，在代码输入框中输入以下代码：<br>
    Private Sub Command1_Click()<br>
    &nbsp;&nbsp;&nbsp; Dim r As Long<br>
    &nbsp;&nbsp;&nbsp; Dim FileName As String<br>
    &nbsp;&nbsp;&nbsp; FileName = &quot;c:\autoexec.bat&quot;<br>
    &nbsp;&nbsp;&nbsp; r=ShowProperties(FileName，Me.hwnd)<br>
    &nbsp;&nbsp;&nbsp; If r&lt;=32 Then MsgBox &quot;Error！ NO c:\autoexec.bat File&quot;<br>
    End SuB<br>
    2．然后用鼠标右击窗体，选择右键菜单中的“添加/添加模块”选项，然后在出现的选择框中选择“模块”类型，接着在出现的模块代码输入框中加入以下代码：<br>
    '通用声明<br>
    Option Explicit<br>
    Type SHELLEXECUTEINFO<br>
    &nbsp;&nbsp;&nbsp; cbSize As long<br>
    &nbsp;&nbsp;&nbsp; Fmask As Long<br>
    &nbsp;&nbsp;&nbsp; hwnd As Long<br>
    &nbsp;&nbsp;&nbsp; lpVerb As String<br>
    &nbsp;&nbsp;&nbsp; lpFile As String<br>
    &nbsp;&nbsp;&nbsp; lpParameters As String<br>
    &nbsp;&nbsp;&nbsp; lpDirectory As String<br>
    &nbsp;&nbsp;&nbsp; nShow As Long<br>
    &nbsp;&nbsp;&nbsp; hInstApp As Long<br>
    &nbsp;&nbsp;&nbsp; lpIDList As Long<br>
    &nbsp;&nbsp;&nbsp; lpClass As String<br>
    &nbsp;&nbsp;&nbsp; hkeyClass As Long<br>
    &nbsp;&nbsp;&nbsp; dwHotKey As Long<br>
    &nbsp;&nbsp;&nbsp; hIcon As Long<br>
    &nbsp;&nbsp;&nbsp; hProcess As Long<br>
    End Type<br>
    Public Const SEE_MASK_INVOKEIDLIST = &amp;HC<br>
    Public Const SESE_MASK_NOCLOSEPROCESS=&amp;H40<br>
    Public Const SEE_MASK_FLAG_NO_UI = &amp;H400<br>
    Declare Function ShellExecuteEX Lib &quot;shell32.dll&quot; Alias 
    &quot;ShellExecuteEx&quot; (SEI As SHELLEXECUTEINFO) As Long<br>
    'ShowProperties过程<br>
    Public Function ShowProperties(FileName As String, OwnerhWnd As Long) As Long<br>
    &nbsp;&nbsp;&nbsp; Dim SEI AS SHELLEXECUTEINFO<br>
    &nbsp;&nbsp;&nbsp; Dim r As Long<br>
    &nbsp;&nbsp;&nbsp; With SEI<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .cbSize = Len(SEI)<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fMask = SEE_MASK_NOCLOSEPROCESS Or 
    SEE_MASK_INVOKEIDLIST Or SEE_MASK_FLAG_NO_UI<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .hwnd = OwnerhWnd<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lpVerb = &quot;properties&quot;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lpFile = FileName<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lpParameters = vbNullChar<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lpDirectory = vbNullChar<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .nShow = 0<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .hInstApp = 0<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lpIDList = 0<br>
    &nbsp;&nbsp;&nbsp; End With<br>
    &nbsp;&nbsp;&nbsp; r = ShellExecuteEX(SEI)<br>
    &nbsp;&nbsp;&nbsp; ShowProperties = SEI.hInstApp<br>
    End Function<br>
    程序的执行<br>
    程序输入完成后，点击VB“运行”菜单中的“启动”或“全面编译”命令，点击“属性按钮”按钮，即可查看C:\AUTOEXEC.BAT的属性。</span></td>
  </tr>
  <tr>
    <td width="100%"><hr>
    </td>
  </tr>
  <tr>
    <td width="100%"><span style="font-size: 9pt">中国程序员网站版权所有</span></td>
  </tr>
</table>

<p><br>
</p>
</body>
</html>
