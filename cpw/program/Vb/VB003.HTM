<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title></title>
</head>

<body background="../../res/back.JPG">
<div align="center"><center>

<table border="0" width="560" height="4" cellspacing="0" cellpadding="0">
  <tr>
    <td width="570" height="7"><p align="center"><strong><span style="font-size: 9pt">用Visual 
    Basic 5.0设计E-mail程序</span></strong></td>
  </tr>
  <tr>
    <td width="570" height="9"><p align="center"><span style="font-size: 9pt">(广东: 
    张冠军)</span></td>
  </tr>
  <tr>
    <td width="570" height="8"><span style="font-size: 9pt"><p align="center">录入:江湖小子</span></td>
  </tr>
</table>
</center></div>

<p><span style="font-size: 9pt">前言<br>
<br>
随着计算机网络的发展，人与人之间信息传输的时间大为缩短。许多文件都是以电子邮件的形式来传送；通常使用过计算机的人，或多或少都会用到E-Mail来传输信息。本文将介绍如何用Microsoft 
MAPI (Messaging Application Program Interface)来设计Mail程序。首先用Visual Basic所提供的MAPISession 
control及MAPIMessage control 来设计Mail收发程序，然后用Microsoft Internet 
Explorer 3.0所提供的E-Mail程序来测试程序设计的正确性<br>
<br>
MAPI简介<br>
<br>
MAPI接口是由微软公司提供的一系列供使用者开发Mail、Scheduling、bulletin 
board、communication程序的编程接口。在使用MAPI设计程序时，首先必须在程序和MAPI之间建立一条或数条Session；当Session建立好之后，Client端程序就可以使用MAPI所提供的功能。<br>
<br>
MAPI的功能主要分成三大部分：Address Books、Transport和Message Store。Address 
Books主要负责设置E-mail type、protocol等参数；Transport负责文件的发送和接收等功能；Message 
Store则负责发送接收等信息的处理。<br>
<br>
说了这么多，MAPI接口好像很可怕。不过没关系，Visual Basic所提供的MAPISession 
control及MAPIMessage control，已经将许多复杂的部分包装成简单 的property和功能，我们只需要对property及功能作一些简单的设置，就可以写一个mail发送和接收的程序。<br>
<br>
以下笔者将用Visual Basic的MAPI<br>
control，来设计mail传送和接收的程序。<br>
<br>
E-mail发送部分<br>
<br>
Step 1：设置Exchange各项参数<br>
<br>
进入Exchange系统，选择新增设置文件；屏幕上会显示所需要的信息服务，选择 
Internet Mail。<br>
<br>
将设置文件的名称设为test。屏幕会显示两个选项，您可以选择以modem方式，或以network方式连接。笔者所用的是Internet专线，所以选择network；假若您是使用 
PPP拨号方式连接Internet，就要选择modem。<br>
<br>
选择network后，Exchange会要求我们输入mail server的IP address。笔者现在所使用的 
Mail server地址是202.96.128.111，在本程序中便将它设置为该地址。<br>
<br>
接着将Transform message的模式设置为automatic，这样当我们连接到Mail 
server<br>
时，新的信息会自动download到local端。<br>
<br>
接下来，将您所使用的Email address、full name、password、download path一步<br>
一步设置好，这样就完成了Exchange各项参数的设置。<br>
<br>
Step 2：程序设计<br>
<br>
在File选项中选择New<br>
Project建立一个新的工程，这时屏幕上会看到许多选项，例如ActiveX 
Document.EXE、ActiveX Document.DLL、ActiveX.EXE、ActiveX Control等...，这时要选Standard.EXE。<br>
<br>
在Project下，选择Property属性选项；在general选项下，将Project Name改为 
email-send， 并将Form名称及Caption更改为email-send 　。<br>
<br>
在屏幕的Form上加入一个MAPImessage<br>
control，取名为MAPIm1；加入一个MAPIsession control，取名为MAPIs1；加入三个textbox 
control，取名为subject、content、addr。并在三个textbox前各加入一个Label，将Caption分别改为subject、content、addr。<br>
<br>
为方便读者了解彼此关系，以下表解释一遍：<br>
(TextBox)<br>
Name<br>
-----------------------------------------------------<br>
subject(输入信件标题)<br>
content(输入信件内容)<br>
addr(输入信件要传送的位址)<br>
<br>
(Label)<br>
Caption<br>
-----------------------------------------------<br>
subject(输入信件标题提示)<br>
content(输入信件内容提示)<br>
addr(输入信件要传送的位址提示)<br>
<br>
将MAPIm1的各项property设置如下：<br>
download mail=TRUE<br>
logoUI= TRUE<br>
newsession=FALSE<br>
username=&quot;test&quot;<br>
这里将download mail设置为TRUE，当程序和mail server第一次连接时，会将新的mail 
download到local端。将logoUI设置为TRUE，则当您程序中logon名称输入错误时，系统会显示一个Message 
Box来让您输入正确的名称。由于这个程序仅使用到一条session，我们将它的值设置成FALSE。当然啦！如果您有许多session要建立的话，也可以将它设置成TRUE。username中所填的，是我们在Exchange中所新增的设置文件名称；如果没有填内容的话，系统将会显示一些message 
box请您输入文件。<br>
<br>
<br>
在屏幕的Form上加入三个Button control，logon、logoff与send，分别将Caption 
改为log on、log off、send。<br>
<br>
(Button)<br>
Name Caption<br>
--------------------------------------------------------<br>
logon(执行登入命令) logon<br>
logoff(执行登出命令) logoff<br>
send(执行传出信件命令) send<br>
<br>
在 logon_Click()中加入以下程序代码，这个动作是使我们登录到mail 
server。<br>
MAPIS1.SignOn<br>
MAPIM1.SessionID = MS1.SessionID<br>
MsgBox &quot;your id is&quot; + Str(MS1.SessionID)<br>
<br>
MS1.SignOn是作登录的动作。在登录时，因为已经将MAPIm1 control的download 
mail属性设置为TRUE，所以可以在屏幕上看到message box显示系统正在download 
mail。登录成功后，系统会传回一个sessionID，将该ID填入MAPIM1的SessionID中，这样就可以利用这条session来传送E-mail。<br>
<br>
在 logoff_Click()中加入以下程序代码，这个动作是使我们离开mail<br>
server。<br>
MAPIS1.SignOff<br>
<br>
在 send_Click()中加入以下程序代码，这个动作是使我们发送email。<br>
MAPIM1.Compose<br>
MAPIM1.RecipDisplayName = addr.text<br>
MAPIM1.AddressResolveUI = True<br>
MAPIM1.MsgSubject = subject.text <br>
MAPIM1.MsgNoteText = content.text<br>
MAPIM1.Send<br>
MsgBox &quot;you successful&quot;<br>
Compose命令的主要目的，是使您可以改变RecipDisplayName的内容，将所需传送的E-mail地址、主题、文章内容分别填入RecipDisplayName、MsgSubject、MsgNoteText，接着用send命令发送。<br>
<br>
Step 3：用IE 3.0 Mail程序测试程序<br>
执行上面设计的email-send程序。在subject textbox中填入&quot;发信测试&quot;，在address 
textbox中填入gzsydici@public1.guangzhou.gd.cn，在content textbox中输入要传送的内容：&quot;大家好！这是发信测试&quot;，接着按传送。这样信件就发送出去了！<br>
<br>
执行IE 3.0选择接收信件，在mail选项中选择read mail。我们会在inbox中看到一封标题为&quot;发信测试&quot;的信件，接着我们看看它的内容，没错！那就是我们刚寄出的测试信。<br>
<br>
E-mail接收部分<br>
<br>
Step 1：程序设计<br>
<br>
在File选项中选择New Project建立一个新的工程。在屏幕上看到许多选项，如 
ActiveX Document.EXE、ActiveX Document.DLL、ActiveX.EXE、ActiveX Control等，这时要选Standard.EXE。<br>
<br>
接着在Project下，选择Property属性选项；在general选项下，将Project Name改为 
email-get，并将FORM名称及Caption更改为 email-get。<br>
<br>
在屏幕的Form上加入一个MAPImessage control，取名为MAPIm1；加入一个 
MAPIsession control，取名为MAPIs1；加入三个Textbox control，分别取名为 
subject、content、indexno， 将其Caption改为mail-subject、mail-content、 indexno；并在TextBox前各加入一个Label 
control，将Caption分别改为subject、 content、indexno。<br>
<br>
将MAPIm1的各项property设置如下：<br>
download mail=TRUE<br>
logoUI=TRUE<br>
newsession=FALSE<br>
username=&quot;test&quot;<br>
这些设置原理如同设计发送mail程序部分。接着，在屏幕的Form上加入一个Button 
control get-mail，将Caption改为get mail。如同发送mail 程序部分和mail server建立一条session。<br>
<br>
在 get-mail_Click() 中加入以下程序代码，这个动作是使我们接收email。<br>
MAPIM1.Fetch<br>
Form1.Caption=MAPIM1. MsgCount<br>
MAPIM1.MsgIndex=CINT(indexno.text)<br>
subjec.Text = MM1.MsgNoteText<br>
content.Text = MAPI1.MsgSubject <br>
Fetch命令，是将信件抓到系统存贮器的inbuffer中。我们将信件抓回来后，可以由 
MsgCount property知道信件数量。接着可以用MsgIndex设置要看哪一封信件的内容、标题。<br>
<br>
Stept 2：测试mail接收程序<br>
首先用任何一种mail程序，任意书写几封信到mail server。在Form1的Caption中，我们会看到所接收的信件的数量。 
执行上面设计的email-get程序，在indexno textbox中填入1。接着按get mail 
Button，这样信件内容及标题就会显示在content、subject两个TextBox中。恭喜您成功了！<br>
</span></p>
</body>
</html>
