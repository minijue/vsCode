<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0053)http://person.zj.cninfo.net/~lifu/program/vfp-mci.htm -->
<HTML><HEAD><TITLE>VFP中多媒体数据的处理</TITLE>
<META content="text/html; charset=gb2312" http-equiv=Content-Type><LINK 
href="VFP中多媒体数据的处理.files/my.css" rel=stylesheet>
<META content="Microsoft FrontPage 4.0" name=GENERATOR></HEAD>
<BODY stylesrc="../../index1.htm" background="../../res/back.gif">
<div align="center"><center>

<table border="1" cellspacing="0" cellpadding="2" width="95%" style="font-size: 9pt"
bordercolor="#000000" bordercolordark="#FFFFFF">
  <tr bgcolor="#CCFFCC">
    <td><span style="font-size: 9pt">您现在的位置是： <b><a href="../progidx.htm">编程技巧</a> --&gt; 
      Visual Foxpro --&gt; </b> </span>VFP中多媒体数据的处理</td>
  </tr>
</table>
</center></div><div align="center"><center>

<table border="1" width="95%" style="font-size: 9pt" bgcolor="#FFFFFF"
bordercolor="#000000" cellpadding="2" cellspacing="0" bordercolordark="#FFFFFF">
  <tr>
    <td width="15%" align="center" valign="top"><!--webbot bot="Include"
      U-Include="../progmenu.htm" TAG="BODY" startspan -->

<table border="1" width="13%" bordercolor="#000000" cellspacing="3" cellpadding="3" style="font-size: 9pt; border-style: solid; border-color: #FFFFFF">
  <tr>
    <td width="100%" align="center"><a href="../VisualC/Vcidx098.htm" target="_self"><strong>Visual 
      C</strong></a></td> 
  </tr> 
  <tr> 
    <td width="100%" align="center"><a href="../Vb/Vbidx099.htm" target="_self"><strong>VBasic</strong></a></td>
  </tr>
  <tr>
    <td width="100%" align="center"><strong><a href="Vfp_idx.htm" target="_self">VFoxpro</a></strong></td>
  </tr>
  <tr>
    <td width="100%" align="center"><strong><a href="../Delphi/Del_idx.htm" target="_self">Delphi</a></strong></td>
  </tr>
  <tr>
    <td width="100%" align="center"><a href="../powerbuild/pow_idx.htm" target="_self"><b>PowerBuilder</b></a></td>
  </tr>
  <tr>
    <td width="100%" align="center"><a href="../linux/linuxidx.htm" target="_self"><b>Linux</b></a></td>
  </tr>
  <tr>
    <td width="100%" align="center"><strong><a href="../other/oth_idx.htm" target="_self">其它</a></strong></td>
  </tr>
</table>
<!--webbot bot="Include" endspan i-checksum="38391" -->

    </td>
    <td width="85%" align="left" valign="top"><table border="1" width="32%" style="font-size: 9pt" height="30"
    cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" bordercolor="#000000"
    bordercolordark="#FFFFFF">
      <tr>
        <td width="100%" bgcolor="#4264B5"><p align="center"><span style="font-size: 9pt"><font
        color="#FFFFFF">资料整理&middot;<a href="http://chinaprog.yeah.net" target="_blank"
        style="color: rgb(255,255,255)">中国程序员网站</a></font></span></td>
      </tr>
    </table>
      <p align="center"><B>VFP中多媒体数据的处理</B></p>
      <p> Visual  
      FoxPro（简称VFP）是一种数据库应用程序开发系统，可利用OLE技术实现对象的链接与嵌入，为应用开发提供了广阔的空间。虽然VFP提供的OLE编程方式简单快捷，但在实际运行VFP程序的过程中，发现使用OLE方式处理多媒体数据运行效果并不理想，其原因在于：<STRONG>①运行速度慢</STRONG>，在VFP中利用OLE方法处理多媒体数据，访问磁盘的次数明显增加，由于频繁地读取磁盘数据，使得用户操作有明显的等待时间。<STRONG>②重复占用磁盘空间</STRONG>，我们可以用General字段建立一个多媒体数据库，观察其大小的变化，在进行多媒体数据入库操作后，发现备注文件（.FPT）的生成长度略大于原文件（.BMP、.WAV、.AVI）长度，且有些操作不能删除原文件，造成重复占用磁盘使用空间。<BR>&nbsp;&nbsp; 
      为简化多媒体数据的管理，提高多媒体信息的输出速度，笔者对VFP中多媒体信息处理功能、外部应用程序接口、Windows的多媒体动态链接库进行了充分的研究，终于找到一种简单有效的实现方法。<BR>&nbsp;&nbsp; 
      首先建立一多媒体数据库PLAY.DBF，设有三个字符型字段：BMPFILE、WAVFILE、AVIFILE，分别用于存放图片文件名（.BMP）、声音文件名（.WAV）和视频文件名（.AVI）。<BR><STRONG>1．图片文件的快速处理</STRONG><BR>&nbsp;&nbsp; 
      充分利用VFP引入的图形控件及其PICTURE属性。①建立表单FORM，放入图形控件IMAGE1，添加PLAY.DBF至表单的数据环境，并将图形控件IM<BR>AGE1的属性设置如下：<BR>THISFORM.IMAGE1.PICTURE=PLAY.BMPFILETH  
      ISFORM.REFRESH()<BR>&nbsp;&nbsp; 该程序在运行过程中，随着数据库指针的移动，图形控件IMAGE1将随之实现图片的快速刷新显示。<BR><STRONG>2．实现数字视频文件的快速播放</STRONG><BR>&nbsp;&nbsp; 
      虽然VFP处理视频文件的功能较弱，但作为VFP运行基础的Windows系统却提供了上百个具有多媒体处理能力的API函数，并统一由多媒体动态链接库提供给开发者使用。多媒体动态链接库所在目录及库名，在不同的系统中略有不同，在Win3.2和Win95中，为\Windows\SYSTEM\MMSYS<BR>TEM.DLL，在NT中则为\Windows\SYSTEM32\WINMM.DLL。<BR>&nbsp;&nbsp; 
      在VFP中，为调用多媒体动态链接库中的API函数，提供了一个外部应用程序接口库文件FOXTOOLS.FLL，其中有两个重要的函数；REGFN()和<BR>CALLFN()。前者用来寄存驻留在Windows动态链接库中的API函数及其参数，后者则用以调用执行Windows的API函数。调用格式：<BR>=REGFN("函数名"，"传给函数的参数类型、数量"，"函数返回值的数据类型"，"DLL库名")<BR>&nbsp;&nbsp; 
      返回参数：调用成功REGFN()返回一个数值，否则返回-1。<BR>=CALLFN(REGFN()的返回值，参数1，参数2…)<BR>&nbsp;&nbsp; 
      注意：（1）在CALLFN()中说明的参数数目、类型必须与在REGFN()中指定的参数相符，否则调用失败。（2）在VFP5.0中，针对32位系统提供了调用REGFN32()。（3）对REGFN()和CALLFN()中双引号内的字符串应注意大小写的混合写法，否则可能会引起执行错误。<BR>&nbsp;&nbsp; 
      下面给出视频操作部分的程序代码，省略了其它相关部分的程序代码。<BR>FORM.INIT事件中的程序代码：<BR>set library to  
      HOME()+foxtools.fll ADDITIVE<BR>public  
      playfavi<BR>playfavi=regfn("MCISendString","CCII","I","MMSYSTEM")<BR>&nbsp;&nbsp;  
      OPEN.CLICK（打开视频文件操作）程序代码：<BR>avifname=play.avifile<BR>=callfn(playfavi,"Open  
      &amp; avifname alias AVI Type AVIVideo",,"",0,0)<BR>=callfn(playfavi,"put  
      AVI window at 161 100 320  
      240","",0,0)<BR>thisform.Refresh()<BR>&nbsp;&nbsp;  
      160，100为窗口左上角坐标，320，240为窗口大小，也可用坐标变量的方式确定视频播放窗口的位置及大小。<BR>&nbsp;&nbsp;  
      PLAY.CLICK（播放AVI文件操作）程序代码：<BR>=callfn(playfavi,"Play  
      AVI","",0,0)<BR>&nbsp;&nbsp;  
      TOP.CLICK（回到片头操作，即影片的第一帧）程序代码：<BR>=callfn(playfavi,"SEEK AVI TO  
      START","",0,0)<BR>&nbsp;&nbsp;  
      END.CLICK（转到片尾操作，即影片的最后一帧）程序代码：<BR>=callfn(playfavi,"SEEK AVI TO  
      END","",0,0)<BR>&nbsp;&nbsp;  
      CONFIG.CLICK（显示视频处理配置操作）程序代码：<BR>=Callfn(playfavi,"configure  
      avi",""0,0)<BR>&nbsp;&nbsp;  
      CLOSE.CLICK（关闭视频文件操作）程序代码：<BR>=callfn(playfavi,"close  
      AVI",""0,0)<BR><STRONG>3．声音文件的处理技巧</STRONG><BR>&nbsp;&nbsp;  
      VFP处理声音文件的方式除OLE外，还可用编程方法控制播放.WAV文件，具体方法：<BR>SET BELL TO PLAY  
      WAVFILE，WAV<BR>??CHR(7) <BR>&nbsp;&nbsp; 用此方法处理声音文件虽然快捷简单，但无法通过键盘或鼠标中断WAV文件的播放。为解决此问题，笔者事先用Windows的RECORDER录制了一个“静音文件”SILENCE.WAV，即没有任何声音的声音文件，同时在表单中设置「停止播放」的命令按钮，其CLICK代码段为：<BR>SET  
      BELL TO "SILENCE.WAV",WAV<BR>??CHR(7)<BR>&nbsp;&nbsp; 操作者可通过「停止播放」按钮中断声音的播放。采用以上方法（非OLE方式）处理多媒体数据不仅能简化数据库管理（只需对各种媒体的文件名进行管理），节省了大量的存储空间，还可以提高多媒体信息的处理速度，并且编程简单，易于实现。
    </td>
  </tr>
  <tr>
    <td width="100%" colspan="2" align="center" valign="top">　</td>
  </tr>
</table>
</center></div>
<p><BR>
</p>
</BODY></HTML>
