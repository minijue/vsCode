<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>多项式相加</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body background="../res/back.JPG">

<p align="center"><strong>多项式相加</strong></p>

<p>//多项式相加<br>
#include &lt;iostream.h&gt;<br>
#include &lt;fstream.h&gt;<br>
#include &lt;malloc.h&gt;<br>
#include &lt;conio.h&gt;<br>
#define LE 0<br>
typedef struct node_type{<br>
&nbsp;&nbsp;&nbsp; int count,exp;<br>
struct node_type *next;<br>
}link;<br>
void main()<br>
{<br>
&nbsp;&nbsp;&nbsp; int cn1,cn2;<br>
link *h1,*h2,*h3,*p1,*p2,*p3,*q,*k;<br>
<br>
p1=(link*)malloc(sizeof(link));<br>
p2=(link*)malloc(sizeof(link));<br>
h1=p1;<br>
h2=p2;<br>
<br>
//&nbsp;&nbsp;&nbsp; char filename[18];<br>
ifstream input;<br>
// cout&lt;&lt;&quot;Input filename:&quot;;<br>
// cin&gt;&gt;filename;<br>
// input.open(filename);<br>
input.open(&quot;dxs.txt&quot;);<br>
<br>
do{<br>
input&gt;&gt;cn1&gt;&gt;cn2;<br>
p1-&gt;count=cn1; p1-&gt;exp=cn2;<br>
q=(link*)malloc(sizeof(link));<br>
p1-&gt;next=q;<br>
p1=q;<br>
}while((cn1!=-1)||(cn2!=-1));<br>
p1-&gt;count=0;<br>
p1-&gt;exp=0;<br>
p1-&gt;next=LE;<br>
<br>
do{<br>
input&gt;&gt;cn1&gt;&gt;cn2;<br>
p2-&gt;count=cn1; p2-&gt;exp=cn2;<br>
q=(link*)malloc(sizeof(link));<br>
p2-&gt;next=q;<br>
p2=q;<br>
}while((cn1!=-1)||(cn2!=-1));<br>
p2-&gt;count=0;<br>
p2-&gt;exp=0;<br>
p2-&gt;next=LE;<br>
<br>
p1=h1;<br>
p2=h2;<br>
do<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;p1-&gt;count&lt;&lt;&quot; 
&quot;&lt;&lt;p1-&gt;exp&lt;&lt;endl;<br>
p1=p1-&gt;next;<br>
}while(p1-&gt;next!=LE);<br>
<br>
do<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;p2-&gt;count&lt;&lt;&quot; 
&quot;&lt;&lt;p2-&gt;exp&lt;&lt;endl;<br>
p2=p2-&gt;next;<br>
}while(p2-&gt;next!=LE);<br>
<br>
&nbsp;&nbsp;&nbsp; p3=(link*)malloc(sizeof(link));<br>
h3=p3;<br>
<br>
p1=h1;<br>
p2=h2;<br>
do<br>
{<br>
&nbsp;&nbsp;&nbsp; if(p1-&gt;exp&gt;p2-&gt;exp)<br>
{<br>
&nbsp;&nbsp;&nbsp; p3-&gt;exp=p1-&gt;exp;<br>
p3-&gt;count=p1-&gt;count;<br>
p1=p1-&gt;next;<br>
q=(link*)malloc(sizeof(link));<br>
p3-&gt;next=q;<br>
p3=q;<br>
}<br>
&nbsp;&nbsp;&nbsp; if(p2-&gt;exp&gt;p1-&gt;exp)<br>
{<br>
&nbsp;&nbsp;&nbsp; p3-&gt;exp=p2-&gt;exp;<br>
p3-&gt;count=p2-&gt;count;<br>
p2=p2-&gt;next;<br>
q=(link*)malloc(sizeof(link));<br>
p3-&gt;next=q;<br>
p3=q;<br>
}<br>
if(p2-&gt;exp==p1-&gt;exp)<br>
{<br>
p3-&gt;exp=p1-&gt;exp;<br>
p3-&gt;count=p1-&gt;count+p2-&gt;count;<br>
p1=p1-&gt;next;<br>
p2=p2-&gt;next;<br>
q=(link*)malloc(sizeof(link));<br>
p3-&gt;next=q;<br>
p3=q;<br>
}<br>
<br>
}while(p1-&gt;next!=LE&amp;&amp;p2-&gt;next!=LE);<br>
&nbsp;&nbsp;&nbsp; p3-&gt;next=LE;<br>
<br>
p3=h3;<br>
do<br>
{<br>
k=p3-&gt;next;<br>
if(k-&gt;next!=LE)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;&quot;p3-&gt;count=&quot;&lt;&lt;p3-&gt;count&lt;&lt;&quot; 
p3-&gt;exp=&quot;&lt;&lt;p3-&gt;exp&lt;&lt;endl;<br>
p3=p3-&gt;next;<br>
}while(p3-&gt;next!=LE);<br>
<br>
cin&gt;&gt;cn1;<br>
<br>
}<br>
/*void shuru(void)<br>
{<br>
k=0;<br>
do{<br>
&nbsp;&nbsp;&nbsp; k++;<br>
input&gt;&gt;a[k]&gt;&gt;a1[k];<br>
}while((a[k]!=-1)&amp;&amp;(b[k]!=-1));<br>
k--;<br>
}*/</p>
</body>
</html>
