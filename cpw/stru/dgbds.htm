<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>用递归方式求解表达式</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body background="../res/back.JPG">

<p align="center"><strong>用递归方式求解表达式</strong></p>

<p>//用递归方式求解表达式<br>
#include &lt;iostream.h&gt;<br>
#include &lt;math.h&gt;<br>
#define N 200<br>
#define Q 0x3a<br>
//#define Q 0x35<br>
//char a[10]=&quot;5((x+x)*x)&quot;;<br>
//char a[10]=&quot;5((x*x)+x)&quot;;<br>
//char a[10]=&quot;5(x*x)&quot;;<br>
//char a[15]=&quot;5(x*((x*x)+x))&quot;;<br>
char a[100]=&quot;5((((x+x)*(x*x))*((x*x)+(x+x)))+x)&quot;;<br>
int az=5;<br>
int sc(char aa[N]);<br>
int t(char s[N]);<br>
main()<br>
{<br>
a[0]=Q;<br>
cout&lt;&lt;t(a);<br>
cin&gt;&gt;az;<br>
}<br>
int t(char s[N])<br>
{<br>
&nbsp;&nbsp;&nbsp; int lj=0,i,kh=0;<br>
char aa[N],bb[N];<br>
&nbsp;&nbsp;&nbsp; if(s[1]=='x')return(1);<br>
else<br>
{<br>
&nbsp;&nbsp;&nbsp; do<br>
{<br>
&nbsp;&nbsp;&nbsp; lj++;<br>
&nbsp;&nbsp;&nbsp; if(s[lj]=='(')kh++;<br>
&nbsp;&nbsp;&nbsp; if(s[lj]==')')kh--;<br>
}while((s[lj]!='+'&amp;&amp;s[lj]!='*')||kh!=1);<br>
<br>
aa[0]=a[0];<br>
bb[0]=a[0];<br>
&nbsp;&nbsp;&nbsp; for(i=2;i&lt;lj;i++)<br>
&nbsp;&nbsp;&nbsp; aa[i-1]=s[i];<br>
for(i=lj+1;i&lt;=N;i++)<br>
&nbsp;&nbsp;&nbsp; bb[i-lj]=s[i];<br>
// cout&lt;&lt;&quot;aa=&quot;&lt;&lt;aa&lt;&lt;&quot; bb=&quot;&lt;&lt;bb&lt;&lt;endl;;<br>
&nbsp;&nbsp;&nbsp; if(s[lj]=='+')<br>
&nbsp;&nbsp;&nbsp; return t(aa)+t(bb);<br>
if(s[lj]=='*')<br>
&nbsp;&nbsp;&nbsp; return t(aa)*sc(bb)+sc(aa)*t(bb);<br>
}<br>
}<br>
int sc(char aa[N])<br>
{<br>
int b[N]={{0}};<br>
char d[N];//B为系数 C为指数栈 D为符号栈<br>
int ks=1,kf=1,kh=1,i=0;//ks系数指针 kf符号指针 kh括号计数<br>
<br>
if(aa[1]=='x')return(a[0]-0x30);<br>
&nbsp;&nbsp;&nbsp; do<br>
{<br>
i++;<br>
switch(aa[i])<br>
{<br>
&nbsp;&nbsp;&nbsp; case '(':<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kh++;<br>
break;<br>
&nbsp;&nbsp;&nbsp; case 'x':<br>
&nbsp;&nbsp;&nbsp; b[ks]=a[0]-0x30;ks++;<br>
break;<br>
&nbsp;&nbsp;&nbsp; case '+':<br>
&nbsp;&nbsp;&nbsp; d[kf]='+';kf++;<br>
break;<br>
&nbsp;&nbsp;&nbsp; case '*':<br>
&nbsp;&nbsp;&nbsp; d[kf]='*';kf++;<br>
break;<br>
&nbsp;&nbsp;&nbsp; case ')':<br>
&nbsp;&nbsp;&nbsp; if(kh!=1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kh--;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kf--;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(d[kf]=='+')<br>
{<br>
b[ks-2]=b[ks-2]+b[ks-1];<br>
ks--;b[ks]=0;<br>
}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(d[kf]=='*')<br>
{<br>
&nbsp;&nbsp;&nbsp; b[ks-2]=b[ks-2]*b[ks-1];<br>
ks--;b[ks]=0;<br>
}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
}<br>
}while(kh!=1);<br>
// cout&lt;&lt;&quot;sc aa=&quot;&lt;&lt;aa&lt;&lt;&quot; &quot;&lt;&lt;b[1]&lt;&lt;endl;<br>
return b[1];<br>
}</p>
</body>
</html>
